{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useCallback, useEffect, useState } from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport NativeEventEmitter from \"react-native-web/dist/exports/NativeEventEmitter\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { useOnEvent, useOnMount } from \"./internal/asyncHookWrappers\";\nimport devicesWithDynamicIsland from \"./internal/devicesWithDynamicIsland\";\nimport devicesWithNotch from \"./internal/devicesWithNotch\";\nimport RNDeviceInfo from \"./internal/nativeInterface\";\nimport { getSupportedPlatformInfoAsync, getSupportedPlatformInfoFunctions, getSupportedPlatformInfoSync } from \"./internal/supported-platform-info\";\nvar _getSupportedPlatform = getSupportedPlatformInfoFunctions({\n    memoKey: 'uniqueId',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: function getter() {\n      return RNDeviceInfo.getUniqueId();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getUniqueIdSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform2 = _slicedToArray(_getSupportedPlatform, 2),\n  getUniqueId = _getSupportedPlatform2[0],\n  getUniqueIdSync = _getSupportedPlatform2[1];\nexport { getUniqueId, getUniqueIdSync };\nvar uniqueId;\nexport function syncUniqueId() {\n  return _syncUniqueId.apply(this, arguments);\n}\nfunction _syncUniqueId() {\n  _syncUniqueId = _asyncToGenerator(function* () {\n    if (Platform.OS === 'ios') {\n      uniqueId = yield RNDeviceInfo.syncUniqueId();\n    } else {\n      uniqueId = yield getUniqueId();\n    }\n    return uniqueId;\n  });\n  return _syncUniqueId.apply(this, arguments);\n}\nvar _getSupportedPlatform3 = getSupportedPlatformInfoFunctions({\n    memoKey: 'instanceId',\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return RNDeviceInfo.getInstanceId();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getInstanceIdSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform4 = _slicedToArray(_getSupportedPlatform3, 2),\n  getInstanceId = _getSupportedPlatform4[0],\n  getInstanceIdSync = _getSupportedPlatform4[1];\nexport { getInstanceId, getInstanceIdSync };\nvar _getSupportedPlatform5 = getSupportedPlatformInfoFunctions({\n    memoKey: 'serialNumber',\n    supportedPlatforms: ['android', 'windows'],\n    getter: function getter() {\n      return RNDeviceInfo.getSerialNumber();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getSerialNumberSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform6 = _slicedToArray(_getSupportedPlatform5, 2),\n  getSerialNumber = _getSupportedPlatform6[0],\n  getSerialNumberSync = _getSupportedPlatform6[1];\nexport { getSerialNumber, getSerialNumberSync };\nvar _getSupportedPlatform7 = getSupportedPlatformInfoFunctions({\n    memoKey: 'androidId',\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return RNDeviceInfo.getAndroidId();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getAndroidIdSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform8 = _slicedToArray(_getSupportedPlatform7, 2),\n  getAndroidId = _getSupportedPlatform8[0],\n  getAndroidIdSync = _getSupportedPlatform8[1];\nexport { getAndroidId, getAndroidIdSync };\nvar _getSupportedPlatform9 = getSupportedPlatformInfoFunctions({\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: function getter() {\n      return RNDeviceInfo.getIpAddress();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getIpAddressSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform10 = _slicedToArray(_getSupportedPlatform9, 2),\n  getIpAddress = _getSupportedPlatform10[0],\n  getIpAddressSync = _getSupportedPlatform10[1];\nexport { getIpAddress, getIpAddressSync };\nvar _getSupportedPlatform11 = getSupportedPlatformInfoFunctions({\n    supportedPlatforms: ['android', 'windows', 'web'],\n    getter: function getter() {\n      return RNDeviceInfo.isCameraPresent();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.isCameraPresentSync();\n    },\n    defaultValue: false\n  }),\n  _getSupportedPlatform12 = _slicedToArray(_getSupportedPlatform11, 2),\n  isCameraPresent = _getSupportedPlatform12[0],\n  isCameraPresentSync = _getSupportedPlatform12[1];\nexport { isCameraPresent, isCameraPresentSync };\nexport function getMacAddress() {\n  return _getMacAddress.apply(this, arguments);\n}\nfunction _getMacAddress() {\n  _getMacAddress = _asyncToGenerator(function* () {\n    if (Platform.OS === 'android') {\n      return RNDeviceInfo.getMacAddress();\n    } else if (Platform.OS === 'ios') {\n      return '02:00:00:00:00:00';\n    }\n    return 'unknown';\n  });\n  return _getMacAddress.apply(this, arguments);\n}\nexport function getMacAddressSync() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getMacAddressSync();\n  } else if (Platform.OS === 'ios') {\n    return '02:00:00:00:00:00';\n  }\n  return 'unknown';\n}\nexport var getDeviceId = function getDeviceId() {\n  return getSupportedPlatformInfoSync({\n    defaultValue: 'unknown',\n    memoKey: 'deviceId',\n    getter: function getter() {\n      return RNDeviceInfo.deviceId;\n    },\n    supportedPlatforms: ['android', 'ios', 'windows']\n  });\n};\nvar _getSupportedPlatform13 = getSupportedPlatformInfoFunctions({\n    memoKey: 'manufacturer',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: function getter() {\n      return Platform.OS == 'ios' ? Promise.resolve('Apple') : RNDeviceInfo.getSystemManufacturer();\n    },\n    syncGetter: function syncGetter() {\n      return Platform.OS == 'ios' ? 'Apple' : RNDeviceInfo.getSystemManufacturerSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform14 = _slicedToArray(_getSupportedPlatform13, 2),\n  getManufacturer = _getSupportedPlatform14[0],\n  getManufacturerSync = _getSupportedPlatform14[1];\nexport { getManufacturer, getManufacturerSync };\nexport var getModel = function getModel() {\n  return getSupportedPlatformInfoSync({\n    memoKey: 'model',\n    defaultValue: 'unknown',\n    supportedPlatforms: ['ios', 'android', 'windows'],\n    getter: function getter() {\n      return RNDeviceInfo.model;\n    }\n  });\n};\nexport var getBrand = function getBrand() {\n  return getSupportedPlatformInfoSync({\n    memoKey: 'brand',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    defaultValue: 'unknown',\n    getter: function getter() {\n      return RNDeviceInfo.brand;\n    }\n  });\n};\nexport var getSystemName = function getSystemName() {\n  return getSupportedPlatformInfoSync({\n    defaultValue: 'unknown',\n    supportedPlatforms: ['ios', 'android', 'windows'],\n    memoKey: 'systemName',\n    getter: function getter() {\n      return Platform.select({\n        ios: RNDeviceInfo.systemName,\n        android: 'Android',\n        windows: 'Windows',\n        default: 'unknown'\n      });\n    }\n  });\n};\nexport var getSystemVersion = function getSystemVersion() {\n  return getSupportedPlatformInfoSync({\n    defaultValue: 'unknown',\n    getter: function getter() {\n      return RNDeviceInfo.systemVersion;\n    },\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    memoKey: 'systemVersion'\n  });\n};\nvar _getSupportedPlatform15 = getSupportedPlatformInfoFunctions({\n    memoKey: 'buildId',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: function getter() {\n      return RNDeviceInfo.getBuildId();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getBuildIdSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform16 = _slicedToArray(_getSupportedPlatform15, 2),\n  getBuildId = _getSupportedPlatform16[0],\n  getBuildIdSync = _getSupportedPlatform16[1];\nexport { getBuildId, getBuildIdSync };\nvar _getSupportedPlatform17 = getSupportedPlatformInfoFunctions({\n    memoKey: 'apiLevel',\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return RNDeviceInfo.getApiLevel();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getApiLevelSync();\n    },\n    defaultValue: -1\n  }),\n  _getSupportedPlatform18 = _slicedToArray(_getSupportedPlatform17, 2),\n  getApiLevel = _getSupportedPlatform18[0],\n  getApiLevelSync = _getSupportedPlatform18[1];\nexport { getApiLevel, getApiLevelSync };\nexport var getBundleId = function getBundleId() {\n  return getSupportedPlatformInfoSync({\n    memoKey: 'bundleId',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    defaultValue: 'unknown',\n    getter: function getter() {\n      return RNDeviceInfo.bundleId;\n    }\n  });\n};\nvar _getSupportedPlatform19 = getSupportedPlatformInfoFunctions({\n    memoKey: 'installerPackageName',\n    supportedPlatforms: ['android', 'windows', 'ios'],\n    getter: function getter() {\n      return RNDeviceInfo.getInstallerPackageName();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getInstallerPackageNameSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform20 = _slicedToArray(_getSupportedPlatform19, 2),\n  getInstallerPackageName = _getSupportedPlatform20[0],\n  getInstallerPackageNameSync = _getSupportedPlatform20[1];\nexport { getInstallerPackageName, getInstallerPackageNameSync };\nexport var getApplicationName = function getApplicationName() {\n  return getSupportedPlatformInfoSync({\n    memoKey: 'appName',\n    defaultValue: 'unknown',\n    getter: function getter() {\n      return RNDeviceInfo.appName;\n    },\n    supportedPlatforms: ['android', 'ios', 'windows']\n  });\n};\nexport var getBuildNumber = function getBuildNumber() {\n  return getSupportedPlatformInfoSync({\n    memoKey: 'buildNumber',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: function getter() {\n      return RNDeviceInfo.buildNumber;\n    },\n    defaultValue: 'unknown'\n  });\n};\nexport var getVersion = function getVersion() {\n  return getSupportedPlatformInfoSync({\n    memoKey: 'version',\n    defaultValue: 'unknown',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: function getter() {\n      return RNDeviceInfo.appVersion;\n    }\n  });\n};\nexport function getReadableVersion() {\n  return getVersion() + '.' + getBuildNumber();\n}\nvar _getSupportedPlatform21 = getSupportedPlatformInfoFunctions({\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: function getter() {\n      return RNDeviceInfo.getDeviceName();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getDeviceNameSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform22 = _slicedToArray(_getSupportedPlatform21, 2),\n  getDeviceName = _getSupportedPlatform22[0],\n  getDeviceNameSync = _getSupportedPlatform22[1];\nexport { getDeviceName, getDeviceNameSync };\nvar _getSupportedPlatform23 = getSupportedPlatformInfoFunctions({\n    supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n    getter: function getter() {\n      return RNDeviceInfo.getUsedMemory();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getUsedMemorySync();\n    },\n    defaultValue: -1\n  }),\n  _getSupportedPlatform24 = _slicedToArray(_getSupportedPlatform23, 2),\n  getUsedMemory = _getSupportedPlatform24[0],\n  getUsedMemorySync = _getSupportedPlatform24[1];\nexport { getUsedMemory, getUsedMemorySync };\nexport var getUserAgent = function getUserAgent() {\n  return getSupportedPlatformInfoAsync({\n    memoKey: 'userAgent',\n    defaultValue: 'unknown',\n    supportedPlatforms: ['android', 'ios', 'web'],\n    getter: function getter() {\n      return RNDeviceInfo.getUserAgent();\n    }\n  });\n};\nexport var getUserAgentSync = function getUserAgentSync() {\n  return getSupportedPlatformInfoSync({\n    memoKey: 'userAgentSync',\n    defaultValue: 'unknown',\n    supportedPlatforms: ['android', 'web'],\n    getter: function getter() {\n      return RNDeviceInfo.getUserAgentSync();\n    }\n  });\n};\nvar _getSupportedPlatform25 = getSupportedPlatformInfoFunctions({\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: function getter() {\n      return RNDeviceInfo.getFontScale();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getFontScaleSync();\n    },\n    defaultValue: -1\n  }),\n  _getSupportedPlatform26 = _slicedToArray(_getSupportedPlatform25, 2),\n  getFontScale = _getSupportedPlatform26[0],\n  getFontScaleSync = _getSupportedPlatform26[1];\nexport { getFontScale, getFontScaleSync };\nvar _getSupportedPlatform27 = getSupportedPlatformInfoFunctions({\n    memoKey: 'bootloader',\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return RNDeviceInfo.getBootloader();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getBootloaderSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform28 = _slicedToArray(_getSupportedPlatform27, 2),\n  getBootloader = _getSupportedPlatform28[0],\n  getBootloaderSync = _getSupportedPlatform28[1];\nexport { getBootloader, getBootloaderSync };\nvar _getSupportedPlatform29 = getSupportedPlatformInfoFunctions({\n    getter: function getter() {\n      return RNDeviceInfo.getDevice();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getDeviceSync();\n    },\n    defaultValue: 'unknown',\n    memoKey: 'device',\n    supportedPlatforms: ['android']\n  }),\n  _getSupportedPlatform30 = _slicedToArray(_getSupportedPlatform29, 2),\n  getDevice = _getSupportedPlatform30[0],\n  getDeviceSync = _getSupportedPlatform30[1];\nexport { getDevice, getDeviceSync };\nvar _getSupportedPlatform31 = getSupportedPlatformInfoFunctions({\n    memoKey: 'display',\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return RNDeviceInfo.getDisplay();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getDisplaySync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform32 = _slicedToArray(_getSupportedPlatform31, 2),\n  getDisplay = _getSupportedPlatform32[0],\n  getDisplaySync = _getSupportedPlatform32[1];\nexport { getDisplay, getDisplaySync };\nvar _getSupportedPlatform33 = getSupportedPlatformInfoFunctions({\n    memoKey: 'fingerprint',\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return RNDeviceInfo.getFingerprint();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getFingerprintSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform34 = _slicedToArray(_getSupportedPlatform33, 2),\n  getFingerprint = _getSupportedPlatform34[0],\n  getFingerprintSync = _getSupportedPlatform34[1];\nexport { getFingerprint, getFingerprintSync };\nvar _getSupportedPlatform35 = getSupportedPlatformInfoFunctions({\n    memoKey: 'hardware',\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return RNDeviceInfo.getHardware();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getHardwareSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform36 = _slicedToArray(_getSupportedPlatform35, 2),\n  getHardware = _getSupportedPlatform36[0],\n  getHardwareSync = _getSupportedPlatform36[1];\nexport { getHardware, getHardwareSync };\nvar _getSupportedPlatform37 = getSupportedPlatformInfoFunctions({\n    memoKey: 'host',\n    supportedPlatforms: ['android', 'windows'],\n    getter: function getter() {\n      return RNDeviceInfo.getHost();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getHostSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform38 = _slicedToArray(_getSupportedPlatform37, 2),\n  getHost = _getSupportedPlatform38[0],\n  getHostSync = _getSupportedPlatform38[1];\nexport { getHost, getHostSync };\nvar _getSupportedPlatform39 = getSupportedPlatformInfoFunctions({\n    memoKey: 'hostNames',\n    supportedPlatforms: ['windows'],\n    getter: function getter() {\n      return RNDeviceInfo.getHostNames();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getHostNamesSync();\n    },\n    defaultValue: []\n  }),\n  _getSupportedPlatform40 = _slicedToArray(_getSupportedPlatform39, 2),\n  getHostNames = _getSupportedPlatform40[0],\n  getHostNamesSync = _getSupportedPlatform40[1];\nexport { getHostNames, getHostNamesSync };\nvar _getSupportedPlatform41 = getSupportedPlatformInfoFunctions({\n    memoKey: 'product',\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return RNDeviceInfo.getProduct();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getProductSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform42 = _slicedToArray(_getSupportedPlatform41, 2),\n  getProduct = _getSupportedPlatform42[0],\n  getProductSync = _getSupportedPlatform42[1];\nexport { getProduct, getProductSync };\nvar _getSupportedPlatform43 = getSupportedPlatformInfoFunctions({\n    memoKey: 'tags',\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return RNDeviceInfo.getTags();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getTagsSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform44 = _slicedToArray(_getSupportedPlatform43, 2),\n  getTags = _getSupportedPlatform44[0],\n  getTagsSync = _getSupportedPlatform44[1];\nexport { getTags, getTagsSync };\nvar _getSupportedPlatform45 = getSupportedPlatformInfoFunctions({\n    memoKey: 'type',\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return RNDeviceInfo.getType();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getTypeSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform46 = _slicedToArray(_getSupportedPlatform45, 2),\n  getType = _getSupportedPlatform46[0],\n  getTypeSync = _getSupportedPlatform46[1];\nexport { getType, getTypeSync };\nvar _getSupportedPlatform47 = getSupportedPlatformInfoFunctions({\n    memoKey: 'baseOs',\n    supportedPlatforms: ['android', 'web', 'windows'],\n    getter: function getter() {\n      return RNDeviceInfo.getBaseOs();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getBaseOsSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform48 = _slicedToArray(_getSupportedPlatform47, 2),\n  getBaseOs = _getSupportedPlatform48[0],\n  getBaseOsSync = _getSupportedPlatform48[1];\nexport { getBaseOs, getBaseOsSync };\nvar _getSupportedPlatform49 = getSupportedPlatformInfoFunctions({\n    memoKey: 'previewSdkInt',\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return RNDeviceInfo.getPreviewSdkInt();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getPreviewSdkIntSync();\n    },\n    defaultValue: -1\n  }),\n  _getSupportedPlatform50 = _slicedToArray(_getSupportedPlatform49, 2),\n  getPreviewSdkInt = _getSupportedPlatform50[0],\n  getPreviewSdkIntSync = _getSupportedPlatform50[1];\nexport { getPreviewSdkInt, getPreviewSdkIntSync };\nvar _getSupportedPlatform51 = getSupportedPlatformInfoFunctions({\n    memoKey: 'securityPatch',\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return RNDeviceInfo.getSecurityPatch();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getSecurityPatchSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform52 = _slicedToArray(_getSupportedPlatform51, 2),\n  getSecurityPatch = _getSupportedPlatform52[0],\n  getSecurityPatchSync = _getSupportedPlatform52[1];\nexport { getSecurityPatch, getSecurityPatchSync };\nvar _getSupportedPlatform53 = getSupportedPlatformInfoFunctions({\n    memoKey: 'codeName',\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return RNDeviceInfo.getCodename();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getCodenameSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform54 = _slicedToArray(_getSupportedPlatform53, 2),\n  getCodename = _getSupportedPlatform54[0],\n  getCodenameSync = _getSupportedPlatform54[1];\nexport { getCodename, getCodenameSync };\nvar _getSupportedPlatform55 = getSupportedPlatformInfoFunctions({\n    memoKey: 'incremental',\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return RNDeviceInfo.getIncremental();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getIncrementalSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform56 = _slicedToArray(_getSupportedPlatform55, 2),\n  getIncremental = _getSupportedPlatform56[0],\n  getIncrementalSync = _getSupportedPlatform56[1];\nexport { getIncremental, getIncrementalSync };\nvar _getSupportedPlatform57 = getSupportedPlatformInfoFunctions({\n    memoKey: 'emulator',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: function getter() {\n      return RNDeviceInfo.isEmulator();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.isEmulatorSync();\n    },\n    defaultValue: false\n  }),\n  _getSupportedPlatform58 = _slicedToArray(_getSupportedPlatform57, 2),\n  isEmulator = _getSupportedPlatform58[0],\n  isEmulatorSync = _getSupportedPlatform58[1];\nexport { isEmulator, isEmulatorSync };\nexport var isTablet = function isTablet() {\n  return getSupportedPlatformInfoSync({\n    defaultValue: false,\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    memoKey: 'tablet',\n    getter: function getter() {\n      return RNDeviceInfo.isTablet;\n    }\n  });\n};\nexport var isDisplayZoomed = function isDisplayZoomed() {\n  return getSupportedPlatformInfoSync({\n    defaultValue: false,\n    supportedPlatforms: ['ios'],\n    memoKey: 'zoomed',\n    getter: function getter() {\n      return RNDeviceInfo.isDisplayZoomed;\n    }\n  });\n};\nvar _getSupportedPlatform59 = getSupportedPlatformInfoFunctions({\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: function getter() {\n      return RNDeviceInfo.isPinOrFingerprintSet();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.isPinOrFingerprintSetSync();\n    },\n    defaultValue: false\n  }),\n  _getSupportedPlatform60 = _slicedToArray(_getSupportedPlatform59, 2),\n  isPinOrFingerprintSet = _getSupportedPlatform60[0],\n  isPinOrFingerprintSetSync = _getSupportedPlatform60[1];\nexport { isPinOrFingerprintSet, isPinOrFingerprintSetSync };\nvar notch;\nexport function hasNotch() {\n  if (notch === undefined) {\n    var _brand = getBrand();\n    var _model = getModel();\n    notch = devicesWithNotch.findIndex(function (item) {\n      return item.brand.toLowerCase() === _brand.toLowerCase() && item.model.toLowerCase() === _model.toLowerCase();\n    }) !== -1;\n  }\n  return notch;\n}\nvar dynamicIsland;\nexport function hasDynamicIsland() {\n  if (dynamicIsland === undefined) {\n    var _brand = getBrand();\n    var _model = getModel();\n    dynamicIsland = devicesWithDynamicIsland.findIndex(function (item) {\n      return item.brand.toLowerCase() === _brand.toLowerCase() && item.model.toLowerCase() === _model.toLowerCase();\n    }) !== -1;\n  }\n  return dynamicIsland;\n}\nvar _getSupportedPlatform61 = getSupportedPlatformInfoFunctions({\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return RNDeviceInfo.hasGms();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.hasGmsSync();\n    },\n    defaultValue: false\n  }),\n  _getSupportedPlatform62 = _slicedToArray(_getSupportedPlatform61, 2),\n  hasGms = _getSupportedPlatform62[0],\n  hasGmsSync = _getSupportedPlatform62[1];\nexport { hasGms, hasGmsSync };\nvar _getSupportedPlatform63 = getSupportedPlatformInfoFunctions({\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return RNDeviceInfo.hasHms();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.hasHmsSync();\n    },\n    defaultValue: false\n  }),\n  _getSupportedPlatform64 = _slicedToArray(_getSupportedPlatform63, 2),\n  hasHms = _getSupportedPlatform64[0],\n  hasHmsSync = _getSupportedPlatform64[1];\nexport { hasHms, hasHmsSync };\nvar _getSupportedPlatform65 = getSupportedPlatformInfoFunctions({\n    memoKey: 'firstInstallTime',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: function getter() {\n      return RNDeviceInfo.getFirstInstallTime();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getFirstInstallTimeSync();\n    },\n    defaultValue: -1\n  }),\n  _getSupportedPlatform66 = _slicedToArray(_getSupportedPlatform65, 2),\n  getFirstInstallTime = _getSupportedPlatform66[0],\n  getFirstInstallTimeSync = _getSupportedPlatform66[1];\nexport { getFirstInstallTime, getFirstInstallTimeSync };\nvar _getSupportedPlatform67 = getSupportedPlatformInfoFunctions({\n    memoKey: 'installReferrer',\n    supportedPlatforms: ['android', 'windows', 'web'],\n    getter: function getter() {\n      return RNDeviceInfo.getInstallReferrer();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getInstallReferrerSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform68 = _slicedToArray(_getSupportedPlatform67, 2),\n  getInstallReferrer = _getSupportedPlatform68[0],\n  getInstallReferrerSync = _getSupportedPlatform68[1];\nexport { getInstallReferrer, getInstallReferrerSync };\nvar _getSupportedPlatform69 = getSupportedPlatformInfoFunctions({\n    memoKey: 'lastUpdateTime',\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return RNDeviceInfo.getLastUpdateTime();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getLastUpdateTimeSync();\n    },\n    defaultValue: -1\n  }),\n  _getSupportedPlatform70 = _slicedToArray(_getSupportedPlatform69, 2),\n  getLastUpdateTime = _getSupportedPlatform70[0],\n  getLastUpdateTimeSync = _getSupportedPlatform70[1];\nexport { getLastUpdateTime, getLastUpdateTimeSync };\nvar _getSupportedPlatform71 = getSupportedPlatformInfoFunctions({\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return RNDeviceInfo.getPhoneNumber();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getPhoneNumberSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform72 = _slicedToArray(_getSupportedPlatform71, 2),\n  getPhoneNumber = _getSupportedPlatform72[0],\n  getPhoneNumberSync = _getSupportedPlatform72[1];\nexport { getPhoneNumber, getPhoneNumberSync };\nvar _getSupportedPlatform73 = getSupportedPlatformInfoFunctions({\n    supportedPlatforms: ['android', 'ios'],\n    getter: function getter() {\n      return RNDeviceInfo.getCarrier();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getCarrierSync();\n    },\n    defaultValue: 'unknown'\n  }),\n  _getSupportedPlatform74 = _slicedToArray(_getSupportedPlatform73, 2),\n  getCarrier = _getSupportedPlatform74[0],\n  getCarrierSync = _getSupportedPlatform74[1];\nexport { getCarrier, getCarrierSync };\nvar _getSupportedPlatform75 = getSupportedPlatformInfoFunctions({\n    memoKey: 'totalMemory',\n    supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n    getter: function getter() {\n      return RNDeviceInfo.getTotalMemory();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getTotalMemorySync();\n    },\n    defaultValue: -1\n  }),\n  _getSupportedPlatform76 = _slicedToArray(_getSupportedPlatform75, 2),\n  getTotalMemory = _getSupportedPlatform76[0],\n  getTotalMemorySync = _getSupportedPlatform76[1];\nexport { getTotalMemory, getTotalMemorySync };\nvar _getSupportedPlatform77 = getSupportedPlatformInfoFunctions({\n    memoKey: 'maxMemory',\n    supportedPlatforms: ['android', 'windows', 'web'],\n    getter: function getter() {\n      return RNDeviceInfo.getMaxMemory();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getMaxMemorySync();\n    },\n    defaultValue: -1\n  }),\n  _getSupportedPlatform78 = _slicedToArray(_getSupportedPlatform77, 2),\n  getMaxMemory = _getSupportedPlatform78[0],\n  getMaxMemorySync = _getSupportedPlatform78[1];\nexport { getMaxMemory, getMaxMemorySync };\nvar _getSupportedPlatform79 = getSupportedPlatformInfoFunctions({\n    supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n    getter: function getter() {\n      return RNDeviceInfo.getTotalDiskCapacity();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getTotalDiskCapacitySync();\n    },\n    defaultValue: -1\n  }),\n  _getSupportedPlatform80 = _slicedToArray(_getSupportedPlatform79, 2),\n  getTotalDiskCapacity = _getSupportedPlatform80[0],\n  getTotalDiskCapacitySync = _getSupportedPlatform80[1];\nexport { getTotalDiskCapacity, getTotalDiskCapacitySync };\nexport function getTotalDiskCapacityOld() {\n  return _getTotalDiskCapacityOld.apply(this, arguments);\n}\nfunction _getTotalDiskCapacityOld() {\n  _getTotalDiskCapacityOld = _asyncToGenerator(function* () {\n    if (Platform.OS === 'android') {\n      return RNDeviceInfo.getTotalDiskCapacityOld();\n    }\n    if (Platform.OS === 'ios' || Platform.OS === 'windows' || Platform.OS === 'web') {\n      return getTotalDiskCapacity();\n    }\n    return -1;\n  });\n  return _getTotalDiskCapacityOld.apply(this, arguments);\n}\nexport function getTotalDiskCapacityOldSync() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getTotalDiskCapacityOldSync();\n  }\n  if (Platform.OS === 'ios' || Platform.OS === 'windows' || Platform.OS === 'web') {\n    return getTotalDiskCapacitySync();\n  }\n  return -1;\n}\nvar _getSupportedPlatform81 = getSupportedPlatformInfoFunctions({\n    supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n    getter: function getter() {\n      return RNDeviceInfo.getFreeDiskStorage();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getFreeDiskStorageSync();\n    },\n    defaultValue: -1\n  }),\n  _getSupportedPlatform82 = _slicedToArray(_getSupportedPlatform81, 2),\n  getFreeDiskStorage = _getSupportedPlatform82[0],\n  getFreeDiskStorageSync = _getSupportedPlatform82[1];\nexport { getFreeDiskStorage, getFreeDiskStorageSync };\nexport function getFreeDiskStorageOld() {\n  return _getFreeDiskStorageOld.apply(this, arguments);\n}\nfunction _getFreeDiskStorageOld() {\n  _getFreeDiskStorageOld = _asyncToGenerator(function* () {\n    if (Platform.OS === 'android') {\n      return RNDeviceInfo.getFreeDiskStorageOld();\n    }\n    if (Platform.OS === 'ios' || Platform.OS === 'windows' || Platform.OS === 'web') {\n      return getFreeDiskStorage();\n    }\n    return -1;\n  });\n  return _getFreeDiskStorageOld.apply(this, arguments);\n}\nexport function getFreeDiskStorageOldSync() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getFreeDiskStorageOldSync();\n  }\n  if (Platform.OS === 'ios' || Platform.OS === 'windows' || Platform.OS === 'web') {\n    return getFreeDiskStorageSync();\n  }\n  return -1;\n}\nvar _getSupportedPlatform83 = getSupportedPlatformInfoFunctions({\n    supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n    getter: function getter() {\n      return RNDeviceInfo.getBatteryLevel();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getBatteryLevelSync();\n    },\n    defaultValue: -1\n  }),\n  _getSupportedPlatform84 = _slicedToArray(_getSupportedPlatform83, 2),\n  getBatteryLevel = _getSupportedPlatform84[0],\n  getBatteryLevelSync = _getSupportedPlatform84[1];\nexport { getBatteryLevel, getBatteryLevelSync };\nvar _getSupportedPlatform85 = getSupportedPlatformInfoFunctions({\n    supportedPlatforms: ['ios', 'android', 'windows', 'web'],\n    getter: function getter() {\n      return RNDeviceInfo.getPowerState();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getPowerStateSync();\n    },\n    defaultValue: {}\n  }),\n  _getSupportedPlatform86 = _slicedToArray(_getSupportedPlatform85, 2),\n  getPowerState = _getSupportedPlatform86[0],\n  getPowerStateSync = _getSupportedPlatform86[1];\nexport { getPowerState, getPowerStateSync };\nvar _getSupportedPlatform87 = getSupportedPlatformInfoFunctions({\n    supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n    getter: function getter() {\n      return RNDeviceInfo.isBatteryCharging();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.isBatteryChargingSync();\n    },\n    defaultValue: false\n  }),\n  _getSupportedPlatform88 = _slicedToArray(_getSupportedPlatform87, 2),\n  isBatteryCharging = _getSupportedPlatform88[0],\n  isBatteryChargingSync = _getSupportedPlatform88[1];\nexport { isBatteryCharging, isBatteryChargingSync };\nexport function isLandscape() {\n  return _isLandscape.apply(this, arguments);\n}\nfunction _isLandscape() {\n  _isLandscape = _asyncToGenerator(function* () {\n    return Promise.resolve(isLandscapeSync());\n  });\n  return _isLandscape.apply(this, arguments);\n}\nexport function isLandscapeSync() {\n  var _Dimensions$get = Dimensions.get('window'),\n    height = _Dimensions$get.height,\n    width = _Dimensions$get.width;\n  return width >= height;\n}\nvar _getSupportedPlatform89 = getSupportedPlatformInfoFunctions({\n    supportedPlatforms: ['android', 'web'],\n    getter: function getter() {\n      return RNDeviceInfo.isAirplaneMode();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.isAirplaneModeSync();\n    },\n    defaultValue: false\n  }),\n  _getSupportedPlatform90 = _slicedToArray(_getSupportedPlatform89, 2),\n  isAirplaneMode = _getSupportedPlatform90[0],\n  isAirplaneModeSync = _getSupportedPlatform90[1];\nexport { isAirplaneMode, isAirplaneModeSync };\nexport var getDeviceType = function getDeviceType() {\n  return getSupportedPlatformInfoSync({\n    memoKey: 'deviceType',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    defaultValue: 'unknown',\n    getter: function getter() {\n      return RNDeviceInfo.deviceType;\n    }\n  });\n};\nexport var getDeviceTypeSync = function getDeviceTypeSync() {\n  return getSupportedPlatformInfoSync({\n    memoKey: 'deviceType',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    defaultValue: 'unknown',\n    getter: function getter() {\n      return RNDeviceInfo.deviceType;\n    }\n  });\n};\nvar _getSupportedPlatform91 = getSupportedPlatformInfoFunctions({\n    memoKey: '_supportedAbis',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: function getter() {\n      return RNDeviceInfo.getSupportedAbis();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getSupportedAbisSync();\n    },\n    defaultValue: []\n  }),\n  _getSupportedPlatform92 = _slicedToArray(_getSupportedPlatform91, 2),\n  supportedAbis = _getSupportedPlatform92[0],\n  supportedAbisSync = _getSupportedPlatform92[1];\nexport { supportedAbis, supportedAbisSync };\nvar _getSupportedPlatform93 = getSupportedPlatformInfoFunctions({\n    memoKey: '_supported32BitAbis',\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return RNDeviceInfo.getSupported32BitAbis();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getSupported32BitAbisSync();\n    },\n    defaultValue: []\n  }),\n  _getSupportedPlatform94 = _slicedToArray(_getSupportedPlatform93, 2),\n  supported32BitAbis = _getSupportedPlatform94[0],\n  supported32BitAbisSync = _getSupportedPlatform94[1];\nexport { supported32BitAbis, supported32BitAbisSync };\nvar _getSupportedPlatform95 = getSupportedPlatformInfoFunctions({\n    memoKey: '_supported64BitAbis',\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return RNDeviceInfo.getSupported64BitAbis();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getSupported64BitAbisSync();\n    },\n    defaultValue: []\n  }),\n  _getSupportedPlatform96 = _slicedToArray(_getSupportedPlatform95, 2),\n  supported64BitAbis = _getSupportedPlatform96[0],\n  supported64BitAbisSync = _getSupportedPlatform96[1];\nexport { supported64BitAbis, supported64BitAbisSync };\nexport function hasSystemFeature(_x) {\n  return _hasSystemFeature.apply(this, arguments);\n}\nfunction _hasSystemFeature() {\n  _hasSystemFeature = _asyncToGenerator(function* (feature) {\n    if (Platform.OS === 'android') {\n      return RNDeviceInfo.hasSystemFeature(feature);\n    }\n    return false;\n  });\n  return _hasSystemFeature.apply(this, arguments);\n}\nexport function hasSystemFeatureSync(feature) {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.hasSystemFeatureSync(feature);\n  }\n  return false;\n}\nexport function isLowBatteryLevel(level) {\n  if (Platform.OS === 'android') {\n    return level < 0.15;\n  }\n  return level < 0.2;\n}\nvar _getSupportedPlatform97 = getSupportedPlatformInfoFunctions({\n    supportedPlatforms: ['android'],\n    getter: function getter() {\n      return RNDeviceInfo.getSystemAvailableFeatures();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getSystemAvailableFeaturesSync();\n    },\n    defaultValue: []\n  }),\n  _getSupportedPlatform98 = _slicedToArray(_getSupportedPlatform97, 2),\n  getSystemAvailableFeatures = _getSupportedPlatform98[0],\n  getSystemAvailableFeaturesSync = _getSupportedPlatform98[1];\nexport { getSystemAvailableFeatures, getSystemAvailableFeaturesSync };\nvar _getSupportedPlatform99 = getSupportedPlatformInfoFunctions({\n    supportedPlatforms: ['android', 'ios', 'web'],\n    getter: function getter() {\n      return RNDeviceInfo.isLocationEnabled();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.isLocationEnabledSync();\n    },\n    defaultValue: false\n  }),\n  _getSupportedPlatform100 = _slicedToArray(_getSupportedPlatform99, 2),\n  isLocationEnabled = _getSupportedPlatform100[0],\n  isLocationEnabledSync = _getSupportedPlatform100[1];\nexport { isLocationEnabled, isLocationEnabledSync };\nvar _getSupportedPlatform101 = getSupportedPlatformInfoFunctions({\n    supportedPlatforms: ['android', 'ios'],\n    getter: function getter() {\n      return RNDeviceInfo.isHeadphonesConnected();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.isHeadphonesConnectedSync();\n    },\n    defaultValue: false\n  }),\n  _getSupportedPlatform102 = _slicedToArray(_getSupportedPlatform101, 2),\n  isHeadphonesConnected = _getSupportedPlatform102[0],\n  isHeadphonesConnectedSync = _getSupportedPlatform102[1];\nexport { isHeadphonesConnected, isHeadphonesConnectedSync };\nvar _getSupportedPlatform103 = getSupportedPlatformInfoFunctions({\n    supportedPlatforms: ['windows'],\n    getter: function getter() {\n      return RNDeviceInfo.isMouseConnected();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.isMouseConnectedSync();\n    },\n    defaultValue: false\n  }),\n  _getSupportedPlatform104 = _slicedToArray(_getSupportedPlatform103, 2),\n  isMouseConnected = _getSupportedPlatform104[0],\n  isMouseConnectedSync = _getSupportedPlatform104[1];\nexport { isMouseConnected, isMouseConnectedSync };\nvar _getSupportedPlatform105 = getSupportedPlatformInfoFunctions({\n    supportedPlatforms: ['windows'],\n    getter: function getter() {\n      return RNDeviceInfo.isKeyboardConnected();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.isKeyboardConnectedSync();\n    },\n    defaultValue: false\n  }),\n  _getSupportedPlatform106 = _slicedToArray(_getSupportedPlatform105, 2),\n  isKeyboardConnected = _getSupportedPlatform106[0],\n  isKeyboardConnectedSync = _getSupportedPlatform106[1];\nexport { isKeyboardConnected, isKeyboardConnectedSync };\nexport var isTabletMode = function isTabletMode() {\n  return getSupportedPlatformInfoAsync({\n    supportedPlatforms: ['windows'],\n    getter: function getter() {\n      return RNDeviceInfo.isTabletMode();\n    },\n    defaultValue: false\n  });\n};\nvar _getSupportedPlatform107 = getSupportedPlatformInfoFunctions({\n    supportedPlatforms: ['android', 'ios'],\n    getter: function getter() {\n      return RNDeviceInfo.getAvailableLocationProviders();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getAvailableLocationProvidersSync();\n    },\n    defaultValue: {}\n  }),\n  _getSupportedPlatform108 = _slicedToArray(_getSupportedPlatform107, 2),\n  getAvailableLocationProviders = _getSupportedPlatform108[0],\n  getAvailableLocationProvidersSync = _getSupportedPlatform108[1];\nexport { getAvailableLocationProviders, getAvailableLocationProvidersSync };\nvar _getSupportedPlatform109 = getSupportedPlatformInfoFunctions({\n    supportedPlatforms: ['ios'],\n    getter: function getter() {\n      return RNDeviceInfo.getBrightness();\n    },\n    syncGetter: function syncGetter() {\n      return RNDeviceInfo.getBrightnessSync();\n    },\n    defaultValue: -1\n  }),\n  _getSupportedPlatform110 = _slicedToArray(_getSupportedPlatform109, 2),\n  getBrightness = _getSupportedPlatform110[0],\n  getBrightnessSync = _getSupportedPlatform110[1];\nexport { getBrightness, getBrightnessSync };\nexport function getDeviceToken() {\n  return _getDeviceToken.apply(this, arguments);\n}\nfunction _getDeviceToken() {\n  _getDeviceToken = _asyncToGenerator(function* () {\n    if (Platform.OS === 'ios') {\n      return RNDeviceInfo.getDeviceToken();\n    }\n    return 'unknown';\n  });\n  return _getDeviceToken.apply(this, arguments);\n}\nvar deviceInfoEmitter = new NativeEventEmitter(NativeModules.RNDeviceInfo);\nexport function useBatteryLevel() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    batteryLevel = _useState2[0],\n    setBatteryLevel = _useState2[1];\n  useEffect(function () {\n    var setInitialValue = function () {\n      var _ref = _asyncToGenerator(function* () {\n        var initialValue = yield getBatteryLevel();\n        setBatteryLevel(initialValue);\n      });\n      return function setInitialValue() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    var onChange = function onChange(level) {\n      setBatteryLevel(level);\n    };\n    setInitialValue();\n    var subscription = deviceInfoEmitter.addListener('RNDeviceInfo_batteryLevelDidChange', onChange);\n    return function () {\n      return subscription.remove();\n    };\n  }, []);\n  return batteryLevel;\n}\nexport function useBatteryLevelIsLow() {\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    batteryLevelIsLow = _useState4[0],\n    setBatteryLevelIsLow = _useState4[1];\n  useEffect(function () {\n    var setInitialValue = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        var initialValue = yield getBatteryLevel();\n        isLowBatteryLevel(initialValue) && setBatteryLevelIsLow(initialValue);\n      });\n      return function setInitialValue() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    setInitialValue();\n    var onChange = function onChange(level) {\n      setBatteryLevelIsLow(level);\n    };\n    var subscription = deviceInfoEmitter.addListener('RNDeviceInfo_batteryLevelIsLow', onChange);\n    return function () {\n      return subscription.remove();\n    };\n  }, []);\n  return batteryLevelIsLow;\n}\nexport function usePowerState() {\n  var _useState5 = useState({}),\n    _useState6 = _slicedToArray(_useState5, 2),\n    powerState = _useState6[0],\n    setPowerState = _useState6[1];\n  useEffect(function () {\n    var setInitialValue = function () {\n      var _ref3 = _asyncToGenerator(function* () {\n        var initialValue = yield getPowerState();\n        setPowerState(initialValue);\n      });\n      return function setInitialValue() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    var onChange = function onChange(state) {\n      setPowerState(state);\n    };\n    setInitialValue();\n    var subscription = deviceInfoEmitter.addListener('RNDeviceInfo_powerStateDidChange', onChange);\n    return function () {\n      return subscription.remove();\n    };\n  }, []);\n  return powerState;\n}\nexport function useIsHeadphonesConnected() {\n  return useOnEvent('RNDeviceInfo_headphoneConnectionDidChange', isHeadphonesConnected, false);\n}\nexport function useFirstInstallTime() {\n  return useOnMount(getFirstInstallTime, -1);\n}\nexport function useDeviceName() {\n  return useOnMount(getDeviceName, 'unknown');\n}\nexport function useHasSystemFeature(feature) {\n  var asyncGetter = useCallback(function () {\n    return hasSystemFeature(feature);\n  }, [feature]);\n  return useOnMount(asyncGetter, false);\n}\nexport function useIsEmulator() {\n  return useOnMount(isEmulator, false);\n}\nexport function useManufacturer() {\n  return useOnMount(getManufacturer, 'unknown');\n}\nexport function useBrightness() {\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    brightness = _useState8[0],\n    setBrightness = _useState8[1];\n  useEffect(function () {\n    var setInitialValue = function () {\n      var _ref4 = _asyncToGenerator(function* () {\n        var initialValue = yield getBrightness();\n        setBrightness(initialValue);\n      });\n      return function setInitialValue() {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n    var onChange = function onChange(value) {\n      setBrightness(value);\n    };\n    setInitialValue();\n    var subscription = deviceInfoEmitter.addListener('RNDeviceInfo_brightnessDidChange', onChange);\n    return function () {\n      return subscription.remove();\n    };\n  }, []);\n  return brightness;\n}\nvar DeviceInfo = {\n  getAndroidId: getAndroidId,\n  getAndroidIdSync: getAndroidIdSync,\n  getApiLevel: getApiLevel,\n  getApiLevelSync: getApiLevelSync,\n  getApplicationName: getApplicationName,\n  getAvailableLocationProviders: getAvailableLocationProviders,\n  getAvailableLocationProvidersSync: getAvailableLocationProvidersSync,\n  getBaseOs: getBaseOs,\n  getBaseOsSync: getBaseOsSync,\n  getBatteryLevel: getBatteryLevel,\n  getBatteryLevelSync: getBatteryLevelSync,\n  getBootloader: getBootloader,\n  getBootloaderSync: getBootloaderSync,\n  getBrand: getBrand,\n  getBuildId: getBuildId,\n  getBuildIdSync: getBuildIdSync,\n  getBuildNumber: getBuildNumber,\n  getBundleId: getBundleId,\n  getCarrier: getCarrier,\n  getCarrierSync: getCarrierSync,\n  getCodename: getCodename,\n  getCodenameSync: getCodenameSync,\n  getDevice: getDevice,\n  getDeviceId: getDeviceId,\n  getDeviceName: getDeviceName,\n  getDeviceNameSync: getDeviceNameSync,\n  getDeviceSync: getDeviceSync,\n  getDeviceToken: getDeviceToken,\n  getDeviceType: getDeviceType,\n  getDisplay: getDisplay,\n  getDisplaySync: getDisplaySync,\n  getFingerprint: getFingerprint,\n  getFingerprintSync: getFingerprintSync,\n  getFirstInstallTime: getFirstInstallTime,\n  getFirstInstallTimeSync: getFirstInstallTimeSync,\n  getFontScale: getFontScale,\n  getFontScaleSync: getFontScaleSync,\n  getFreeDiskStorage: getFreeDiskStorage,\n  getFreeDiskStorageOld: getFreeDiskStorageOld,\n  getFreeDiskStorageSync: getFreeDiskStorageSync,\n  getFreeDiskStorageOldSync: getFreeDiskStorageOldSync,\n  getHardware: getHardware,\n  getHardwareSync: getHardwareSync,\n  getHost: getHost,\n  getHostSync: getHostSync,\n  getHostNames: getHostNames,\n  getHostNamesSync: getHostNamesSync,\n  getIncremental: getIncremental,\n  getIncrementalSync: getIncrementalSync,\n  getInstallerPackageName: getInstallerPackageName,\n  getInstallerPackageNameSync: getInstallerPackageNameSync,\n  getInstallReferrer: getInstallReferrer,\n  getInstallReferrerSync: getInstallReferrerSync,\n  getInstanceId: getInstanceId,\n  getInstanceIdSync: getInstanceIdSync,\n  getIpAddress: getIpAddress,\n  getIpAddressSync: getIpAddressSync,\n  getLastUpdateTime: getLastUpdateTime,\n  getLastUpdateTimeSync: getLastUpdateTimeSync,\n  getMacAddress: getMacAddress,\n  getMacAddressSync: getMacAddressSync,\n  getManufacturer: getManufacturer,\n  getManufacturerSync: getManufacturerSync,\n  getMaxMemory: getMaxMemory,\n  getMaxMemorySync: getMaxMemorySync,\n  getModel: getModel,\n  getPhoneNumber: getPhoneNumber,\n  getPhoneNumberSync: getPhoneNumberSync,\n  getPowerState: getPowerState,\n  getPowerStateSync: getPowerStateSync,\n  getPreviewSdkInt: getPreviewSdkInt,\n  getPreviewSdkIntSync: getPreviewSdkIntSync,\n  getProduct: getProduct,\n  getProductSync: getProductSync,\n  getReadableVersion: getReadableVersion,\n  getSecurityPatch: getSecurityPatch,\n  getSecurityPatchSync: getSecurityPatchSync,\n  getSerialNumber: getSerialNumber,\n  getSerialNumberSync: getSerialNumberSync,\n  getSystemAvailableFeatures: getSystemAvailableFeatures,\n  getSystemAvailableFeaturesSync: getSystemAvailableFeaturesSync,\n  getSystemName: getSystemName,\n  getSystemVersion: getSystemVersion,\n  getTags: getTags,\n  getTagsSync: getTagsSync,\n  getTotalDiskCapacity: getTotalDiskCapacity,\n  getTotalDiskCapacityOld: getTotalDiskCapacityOld,\n  getTotalDiskCapacitySync: getTotalDiskCapacitySync,\n  getTotalDiskCapacityOldSync: getTotalDiskCapacityOldSync,\n  getTotalMemory: getTotalMemory,\n  getTotalMemorySync: getTotalMemorySync,\n  getType: getType,\n  getTypeSync: getTypeSync,\n  getUniqueId: getUniqueId,\n  getUniqueIdSync: getUniqueIdSync,\n  getUsedMemory: getUsedMemory,\n  getUsedMemorySync: getUsedMemorySync,\n  getUserAgent: getUserAgent,\n  getUserAgentSync: getUserAgentSync,\n  getVersion: getVersion,\n  getBrightness: getBrightness,\n  getBrightnessSync: getBrightnessSync,\n  hasGms: hasGms,\n  hasGmsSync: hasGmsSync,\n  hasHms: hasHms,\n  hasHmsSync: hasHmsSync,\n  hasNotch: hasNotch,\n  hasDynamicIsland: hasDynamicIsland,\n  hasSystemFeature: hasSystemFeature,\n  hasSystemFeatureSync: hasSystemFeatureSync,\n  isAirplaneMode: isAirplaneMode,\n  isAirplaneModeSync: isAirplaneModeSync,\n  isBatteryCharging: isBatteryCharging,\n  isBatteryChargingSync: isBatteryChargingSync,\n  isCameraPresent: isCameraPresent,\n  isCameraPresentSync: isCameraPresentSync,\n  isEmulator: isEmulator,\n  isEmulatorSync: isEmulatorSync,\n  isHeadphonesConnected: isHeadphonesConnected,\n  isHeadphonesConnectedSync: isHeadphonesConnectedSync,\n  isLandscape: isLandscape,\n  isLandscapeSync: isLandscapeSync,\n  isLocationEnabled: isLocationEnabled,\n  isLocationEnabledSync: isLocationEnabledSync,\n  isPinOrFingerprintSet: isPinOrFingerprintSet,\n  isPinOrFingerprintSetSync: isPinOrFingerprintSetSync,\n  isMouseConnected: isMouseConnected,\n  isMouseConnectedSync: isMouseConnectedSync,\n  isKeyboardConnected: isKeyboardConnected,\n  isKeyboardConnectedSync: isKeyboardConnectedSync,\n  isTabletMode: isTabletMode,\n  isTablet: isTablet,\n  isDisplayZoomed: isDisplayZoomed,\n  supported32BitAbis: supported32BitAbis,\n  supported32BitAbisSync: supported32BitAbisSync,\n  supported64BitAbis: supported64BitAbis,\n  supported64BitAbisSync: supported64BitAbisSync,\n  supportedAbis: supportedAbis,\n  supportedAbisSync: supportedAbisSync,\n  syncUniqueId: syncUniqueId,\n  useBatteryLevel: useBatteryLevel,\n  useBatteryLevelIsLow: useBatteryLevelIsLow,\n  useDeviceName: useDeviceName,\n  useFirstInstallTime: useFirstInstallTime,\n  useHasSystemFeature: useHasSystemFeature,\n  useIsEmulator: useIsEmulator,\n  usePowerState: usePowerState,\n  useManufacturer: useManufacturer,\n  useIsHeadphonesConnected: useIsHeadphonesConnected,\n  useBrightness: useBrightness\n};\nexport default DeviceInfo;","map":{"version":3,"names":["useCallback","useEffect","useState","Dimensions","NativeEventEmitter","NativeModules","Platform","useOnEvent","useOnMount","devicesWithDynamicIsland","devicesWithNotch","RNDeviceInfo","getSupportedPlatformInfoAsync","getSupportedPlatformInfoFunctions","getSupportedPlatformInfoSync","_getSupportedPlatform","memoKey","supportedPlatforms","getter","getUniqueId","syncGetter","getUniqueIdSync","defaultValue","_getSupportedPlatform2","_slicedToArray","uniqueId","syncUniqueId","_syncUniqueId","apply","arguments","_asyncToGenerator","OS","_getSupportedPlatform3","getInstanceId","getInstanceIdSync","_getSupportedPlatform4","_getSupportedPlatform5","getSerialNumber","getSerialNumberSync","_getSupportedPlatform6","_getSupportedPlatform7","getAndroidId","getAndroidIdSync","_getSupportedPlatform8","_getSupportedPlatform9","getIpAddress","getIpAddressSync","_getSupportedPlatform10","_getSupportedPlatform11","isCameraPresent","isCameraPresentSync","_getSupportedPlatform12","getMacAddress","_getMacAddress","getMacAddressSync","getDeviceId","deviceId","_getSupportedPlatform13","Promise","resolve","getSystemManufacturer","getSystemManufacturerSync","_getSupportedPlatform14","getManufacturer","getManufacturerSync","getModel","model","getBrand","brand","getSystemName","select","ios","systemName","android","windows","default","getSystemVersion","systemVersion","_getSupportedPlatform15","getBuildId","getBuildIdSync","_getSupportedPlatform16","_getSupportedPlatform17","getApiLevel","getApiLevelSync","_getSupportedPlatform18","getBundleId","bundleId","_getSupportedPlatform19","getInstallerPackageName","getInstallerPackageNameSync","_getSupportedPlatform20","getApplicationName","appName","getBuildNumber","buildNumber","getVersion","appVersion","getReadableVersion","_getSupportedPlatform21","getDeviceName","getDeviceNameSync","_getSupportedPlatform22","_getSupportedPlatform23","getUsedMemory","getUsedMemorySync","_getSupportedPlatform24","getUserAgent","getUserAgentSync","_getSupportedPlatform25","getFontScale","getFontScaleSync","_getSupportedPlatform26","_getSupportedPlatform27","getBootloader","getBootloaderSync","_getSupportedPlatform28","_getSupportedPlatform29","getDevice","getDeviceSync","_getSupportedPlatform30","_getSupportedPlatform31","getDisplay","getDisplaySync","_getSupportedPlatform32","_getSupportedPlatform33","getFingerprint","getFingerprintSync","_getSupportedPlatform34","_getSupportedPlatform35","getHardware","getHardwareSync","_getSupportedPlatform36","_getSupportedPlatform37","getHost","getHostSync","_getSupportedPlatform38","_getSupportedPlatform39","getHostNames","getHostNamesSync","_getSupportedPlatform40","_getSupportedPlatform41","getProduct","getProductSync","_getSupportedPlatform42","_getSupportedPlatform43","getTags","getTagsSync","_getSupportedPlatform44","_getSupportedPlatform45","getType","getTypeSync","_getSupportedPlatform46","_getSupportedPlatform47","getBaseOs","getBaseOsSync","_getSupportedPlatform48","_getSupportedPlatform49","getPreviewSdkInt","getPreviewSdkIntSync","_getSupportedPlatform50","_getSupportedPlatform51","getSecurityPatch","getSecurityPatchSync","_getSupportedPlatform52","_getSupportedPlatform53","getCodename","getCodenameSync","_getSupportedPlatform54","_getSupportedPlatform55","getIncremental","getIncrementalSync","_getSupportedPlatform56","_getSupportedPlatform57","isEmulator","isEmulatorSync","_getSupportedPlatform58","isTablet","isDisplayZoomed","_getSupportedPlatform59","isPinOrFingerprintSet","isPinOrFingerprintSetSync","_getSupportedPlatform60","notch","hasNotch","undefined","_brand","_model","findIndex","item","toLowerCase","dynamicIsland","hasDynamicIsland","_getSupportedPlatform61","hasGms","hasGmsSync","_getSupportedPlatform62","_getSupportedPlatform63","hasHms","hasHmsSync","_getSupportedPlatform64","_getSupportedPlatform65","getFirstInstallTime","getFirstInstallTimeSync","_getSupportedPlatform66","_getSupportedPlatform67","getInstallReferrer","getInstallReferrerSync","_getSupportedPlatform68","_getSupportedPlatform69","getLastUpdateTime","getLastUpdateTimeSync","_getSupportedPlatform70","_getSupportedPlatform71","getPhoneNumber","getPhoneNumberSync","_getSupportedPlatform72","_getSupportedPlatform73","getCarrier","getCarrierSync","_getSupportedPlatform74","_getSupportedPlatform75","getTotalMemory","getTotalMemorySync","_getSupportedPlatform76","_getSupportedPlatform77","getMaxMemory","getMaxMemorySync","_getSupportedPlatform78","_getSupportedPlatform79","getTotalDiskCapacity","getTotalDiskCapacitySync","_getSupportedPlatform80","getTotalDiskCapacityOld","_getTotalDiskCapacityOld","getTotalDiskCapacityOldSync","_getSupportedPlatform81","getFreeDiskStorage","getFreeDiskStorageSync","_getSupportedPlatform82","getFreeDiskStorageOld","_getFreeDiskStorageOld","getFreeDiskStorageOldSync","_getSupportedPlatform83","getBatteryLevel","getBatteryLevelSync","_getSupportedPlatform84","_getSupportedPlatform85","getPowerState","getPowerStateSync","_getSupportedPlatform86","_getSupportedPlatform87","isBatteryCharging","isBatteryChargingSync","_getSupportedPlatform88","isLandscape","_isLandscape","isLandscapeSync","_Dimensions$get","get","height","width","_getSupportedPlatform89","isAirplaneMode","isAirplaneModeSync","_getSupportedPlatform90","getDeviceType","deviceType","getDeviceTypeSync","_getSupportedPlatform91","getSupportedAbis","getSupportedAbisSync","_getSupportedPlatform92","supportedAbis","supportedAbisSync","_getSupportedPlatform93","getSupported32BitAbis","getSupported32BitAbisSync","_getSupportedPlatform94","supported32BitAbis","supported32BitAbisSync","_getSupportedPlatform95","getSupported64BitAbis","getSupported64BitAbisSync","_getSupportedPlatform96","supported64BitAbis","supported64BitAbisSync","hasSystemFeature","_x","_hasSystemFeature","feature","hasSystemFeatureSync","isLowBatteryLevel","level","_getSupportedPlatform97","getSystemAvailableFeatures","getSystemAvailableFeaturesSync","_getSupportedPlatform98","_getSupportedPlatform99","isLocationEnabled","isLocationEnabledSync","_getSupportedPlatform100","_getSupportedPlatform101","isHeadphonesConnected","isHeadphonesConnectedSync","_getSupportedPlatform102","_getSupportedPlatform103","isMouseConnected","isMouseConnectedSync","_getSupportedPlatform104","_getSupportedPlatform105","isKeyboardConnected","isKeyboardConnectedSync","_getSupportedPlatform106","isTabletMode","_getSupportedPlatform107","getAvailableLocationProviders","getAvailableLocationProvidersSync","_getSupportedPlatform108","_getSupportedPlatform109","getBrightness","getBrightnessSync","_getSupportedPlatform110","getDeviceToken","_getDeviceToken","deviceInfoEmitter","useBatteryLevel","_useState","_useState2","batteryLevel","setBatteryLevel","setInitialValue","_ref","initialValue","onChange","subscription","addListener","remove","useBatteryLevelIsLow","_useState3","_useState4","batteryLevelIsLow","setBatteryLevelIsLow","_ref2","usePowerState","_useState5","_useState6","powerState","setPowerState","_ref3","state","useIsHeadphonesConnected","useFirstInstallTime","useDeviceName","useHasSystemFeature","asyncGetter","useIsEmulator","useManufacturer","useBrightness","_useState7","_useState8","brightness","setBrightness","_ref4","value","DeviceInfo"],"sources":["/Users/sharmalperera/projects/apps/ExpoTemplateAppWithComponent/node_modules/react-native-device-info/lib/module/index.ts"],"sourcesContent":["import { useCallback, useEffect, useState } from 'react';\nimport { Dimensions, NativeEventEmitter, NativeModules, Platform } from 'react-native';\nimport { useOnEvent, useOnMount } from './internal/asyncHookWrappers';\nimport devicesWithDynamicIsland from \"./internal/devicesWithDynamicIsland\";\nimport devicesWithNotch from './internal/devicesWithNotch';\nimport RNDeviceInfo from './internal/nativeInterface';\nimport {\n  getSupportedPlatformInfoAsync,\n  getSupportedPlatformInfoFunctions,\n  getSupportedPlatformInfoSync,\n} from './internal/supported-platform-info';\nimport { DeviceInfoModule } from './internal/privateTypes';\nimport type {\n  AsyncHookResult,\n  DeviceType,\n  LocationProviderInfo,\n  PowerState,\n} from './internal/types';\n\nexport const [getUniqueId, getUniqueIdSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'uniqueId',\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.getUniqueId(),\n  syncGetter: () => RNDeviceInfo.getUniqueIdSync(),\n  defaultValue: 'unknown',\n});\n\nlet uniqueId: string;\nexport async function syncUniqueId() {\n  if (Platform.OS === 'ios') {\n    uniqueId = await RNDeviceInfo.syncUniqueId();\n  } else {\n    uniqueId = await getUniqueId();\n  }\n  return uniqueId;\n}\n\nexport const [getInstanceId, getInstanceIdSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'instanceId',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getInstanceId(),\n  syncGetter: () => RNDeviceInfo.getInstanceIdSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getSerialNumber, getSerialNumberSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'serialNumber',\n  supportedPlatforms: ['android', 'windows'],\n  getter: () => RNDeviceInfo.getSerialNumber(),\n  syncGetter: () => RNDeviceInfo.getSerialNumberSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getAndroidId, getAndroidIdSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'androidId',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getAndroidId(),\n  syncGetter: () => RNDeviceInfo.getAndroidIdSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getIpAddress, getIpAddressSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.getIpAddress(),\n  syncGetter: () => RNDeviceInfo.getIpAddressSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [isCameraPresent, isCameraPresentSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'windows', 'web'],\n  getter: () => RNDeviceInfo.isCameraPresent(),\n  syncGetter: () => RNDeviceInfo.isCameraPresentSync(),\n  defaultValue: false,\n});\n\nexport async function getMacAddress() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getMacAddress();\n  } else if (Platform.OS === 'ios') {\n    return '02:00:00:00:00:00';\n  }\n  return 'unknown';\n}\n\nexport function getMacAddressSync() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getMacAddressSync();\n  } else if (Platform.OS === 'ios') {\n    return '02:00:00:00:00:00';\n  }\n  return 'unknown';\n}\n\nexport const getDeviceId = () =>\n  getSupportedPlatformInfoSync({\n    defaultValue: 'unknown',\n    memoKey: 'deviceId',\n    getter: () => RNDeviceInfo.deviceId,\n    supportedPlatforms: ['android', 'ios', 'windows'],\n  });\n\nexport const [getManufacturer, getManufacturerSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'manufacturer',\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () =>\n    Platform.OS == 'ios' ? Promise.resolve('Apple') : RNDeviceInfo.getSystemManufacturer(),\n  syncGetter: () => (Platform.OS == 'ios' ? 'Apple' : RNDeviceInfo.getSystemManufacturerSync()),\n  defaultValue: 'unknown',\n});\n\nexport const getModel = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'model',\n    defaultValue: 'unknown',\n    supportedPlatforms: ['ios', 'android', 'windows'],\n    getter: () => RNDeviceInfo.model,\n  });\n\nexport const getBrand = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'brand',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    defaultValue: 'unknown',\n    getter: () => RNDeviceInfo.brand,\n  });\n\nexport const getSystemName = () =>\n  getSupportedPlatformInfoSync({\n    defaultValue: 'unknown',\n    supportedPlatforms: ['ios', 'android', 'windows'],\n    memoKey: 'systemName',\n    getter: () =>\n      Platform.select({\n        ios: RNDeviceInfo.systemName,\n        android: 'Android',\n        windows: 'Windows',\n        default: 'unknown',\n      }),\n  });\n\nexport const getSystemVersion = () =>\n  getSupportedPlatformInfoSync({\n    defaultValue: 'unknown',\n    getter: () => RNDeviceInfo.systemVersion,\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    memoKey: 'systemVersion',\n  });\n\nexport const [getBuildId, getBuildIdSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'buildId',\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.getBuildId(),\n  syncGetter: () => RNDeviceInfo.getBuildIdSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getApiLevel, getApiLevelSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'apiLevel',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getApiLevel(),\n  syncGetter: () => RNDeviceInfo.getApiLevelSync(),\n  defaultValue: -1,\n});\n\nexport const getBundleId = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'bundleId',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    defaultValue: 'unknown',\n    getter: () => RNDeviceInfo.bundleId,\n  });\n\nexport const [\n  getInstallerPackageName,\n  getInstallerPackageNameSync,\n] = getSupportedPlatformInfoFunctions({\n  memoKey: 'installerPackageName',\n  supportedPlatforms: ['android', 'windows', 'ios'],\n  getter: () => RNDeviceInfo.getInstallerPackageName(),\n  syncGetter: () => RNDeviceInfo.getInstallerPackageNameSync(),\n  defaultValue: 'unknown',\n});\n\nexport const getApplicationName = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'appName',\n    defaultValue: 'unknown',\n    getter: () => RNDeviceInfo.appName,\n    supportedPlatforms: ['android', 'ios', 'windows'],\n  });\n\nexport const getBuildNumber = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'buildNumber',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: () => RNDeviceInfo.buildNumber,\n    defaultValue: 'unknown',\n  });\n\nexport const getVersion = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'version',\n    defaultValue: 'unknown',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: () => RNDeviceInfo.appVersion,\n  });\n\nexport function getReadableVersion() {\n  return getVersion() + '.' + getBuildNumber();\n}\n\nexport const [getDeviceName, getDeviceNameSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.getDeviceName(),\n  syncGetter: () => RNDeviceInfo.getDeviceNameSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getUsedMemory, getUsedMemorySync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getUsedMemory(),\n  syncGetter: () => RNDeviceInfo.getUsedMemorySync(),\n  defaultValue: -1,\n});\n\nexport const getUserAgent = () =>\n  getSupportedPlatformInfoAsync({\n    memoKey: 'userAgent',\n    defaultValue: 'unknown',\n    supportedPlatforms: ['android', 'ios', 'web'],\n    getter: () => RNDeviceInfo.getUserAgent(),\n  });\n\nexport const getUserAgentSync = () =>\n  getSupportedPlatformInfoSync({\n    memoKey: 'userAgentSync',\n    defaultValue: 'unknown',\n    supportedPlatforms: ['android', 'web'],\n    getter: () => RNDeviceInfo.getUserAgentSync(),\n  });\n\nexport const [getFontScale, getFontScaleSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.getFontScale(),\n  syncGetter: () => RNDeviceInfo.getFontScaleSync(),\n  defaultValue: -1,\n});\n\nexport const [getBootloader, getBootloaderSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'bootloader',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getBootloader(),\n  syncGetter: () => RNDeviceInfo.getBootloaderSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getDevice, getDeviceSync] = getSupportedPlatformInfoFunctions({\n  getter: () => RNDeviceInfo.getDevice(),\n  syncGetter: () => RNDeviceInfo.getDeviceSync(),\n  defaultValue: 'unknown',\n  memoKey: 'device',\n  supportedPlatforms: ['android'],\n});\n\nexport const [getDisplay, getDisplaySync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'display',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getDisplay(),\n  syncGetter: () => RNDeviceInfo.getDisplaySync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getFingerprint, getFingerprintSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'fingerprint',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getFingerprint(),\n  syncGetter: () => RNDeviceInfo.getFingerprintSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getHardware, getHardwareSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'hardware',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getHardware(),\n  syncGetter: () => RNDeviceInfo.getHardwareSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getHost, getHostSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'host',\n  supportedPlatforms: ['android', 'windows'],\n  getter: () => RNDeviceInfo.getHost(),\n  syncGetter: () => RNDeviceInfo.getHostSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getHostNames, getHostNamesSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'hostNames',\n  supportedPlatforms: ['windows'],\n  getter: () => RNDeviceInfo.getHostNames(),\n  syncGetter: () => RNDeviceInfo.getHostNamesSync(),\n  defaultValue: [] as string[],\n});\n\nexport const [getProduct, getProductSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'product',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getProduct(),\n  syncGetter: () => RNDeviceInfo.getProductSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getTags, getTagsSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'tags',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getTags(),\n  syncGetter: () => RNDeviceInfo.getTagsSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getType, getTypeSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'type',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getType(),\n  syncGetter: () => RNDeviceInfo.getTypeSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getBaseOs, getBaseOsSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'baseOs',\n  supportedPlatforms: ['android', 'web', 'windows'],\n  getter: () => RNDeviceInfo.getBaseOs(),\n  syncGetter: () => RNDeviceInfo.getBaseOsSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getPreviewSdkInt, getPreviewSdkIntSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'previewSdkInt',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getPreviewSdkInt(),\n  syncGetter: () => RNDeviceInfo.getPreviewSdkIntSync(),\n  defaultValue: -1,\n});\n\nexport const [getSecurityPatch, getSecurityPatchSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'securityPatch',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getSecurityPatch(),\n  syncGetter: () => RNDeviceInfo.getSecurityPatchSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getCodename, getCodenameSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'codeName',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getCodename(),\n  syncGetter: () => RNDeviceInfo.getCodenameSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getIncremental, getIncrementalSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'incremental',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getIncremental(),\n  syncGetter: () => RNDeviceInfo.getIncrementalSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [isEmulator, isEmulatorSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'emulator',\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.isEmulator(),\n  syncGetter: () => RNDeviceInfo.isEmulatorSync(),\n  defaultValue: false,\n});\n\nexport const isTablet = () =>\n  getSupportedPlatformInfoSync({\n    defaultValue: false,\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    memoKey: 'tablet',\n    getter: () => RNDeviceInfo.isTablet,\n  });\n\nexport const isDisplayZoomed = () =>\n  getSupportedPlatformInfoSync({\n    defaultValue: false,\n    supportedPlatforms: ['ios'],\n    memoKey: 'zoomed',\n    getter: () => RNDeviceInfo.isDisplayZoomed,\n  });\n\nexport const [isPinOrFingerprintSet, isPinOrFingerprintSetSync] = getSupportedPlatformInfoFunctions(\n  {\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    getter: () => RNDeviceInfo.isPinOrFingerprintSet(),\n    syncGetter: () => RNDeviceInfo.isPinOrFingerprintSetSync(),\n    defaultValue: false,\n  }\n);\n\nlet notch: boolean;\nexport function hasNotch() {\n  if (notch === undefined) {\n    let _brand = getBrand();\n    let _model = getModel();\n    notch =\n      devicesWithNotch.findIndex(\n        (item) =>\n          item.brand.toLowerCase() === _brand.toLowerCase() &&\n          item.model.toLowerCase() === _model.toLowerCase()\n      ) !== -1;\n  }\n  return notch;\n}\n\nlet dynamicIsland: boolean;\nexport function hasDynamicIsland() {\n  if (dynamicIsland === undefined) {\n    let _brand = getBrand();\n    let _model = getModel();\n    dynamicIsland =\n      devicesWithDynamicIsland.findIndex(\n        (item) =>\n          item.brand.toLowerCase() === _brand.toLowerCase() &&\n          item.model.toLowerCase() === _model.toLowerCase()\n      ) !== -1;\n  }\n  return dynamicIsland;\n}\n\nexport const [hasGms, hasGmsSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.hasGms(),\n  syncGetter: () => RNDeviceInfo.hasGmsSync(),\n  defaultValue: false,\n});\n\nexport const [hasHms, hasHmsSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.hasHms(),\n  syncGetter: () => RNDeviceInfo.hasHmsSync(),\n  defaultValue: false,\n});\n\nexport const [getFirstInstallTime, getFirstInstallTimeSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'firstInstallTime',\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.getFirstInstallTime(),\n  syncGetter: () => RNDeviceInfo.getFirstInstallTimeSync(),\n  defaultValue: -1,\n});\n\nexport const [getInstallReferrer, getInstallReferrerSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'installReferrer',\n  supportedPlatforms: ['android', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getInstallReferrer(),\n  syncGetter: () => RNDeviceInfo.getInstallReferrerSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getLastUpdateTime, getLastUpdateTimeSync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'lastUpdateTime',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getLastUpdateTime(),\n  syncGetter: () => RNDeviceInfo.getLastUpdateTimeSync(),\n  defaultValue: -1,\n});\n\nexport const [getPhoneNumber, getPhoneNumberSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getPhoneNumber(),\n  syncGetter: () => RNDeviceInfo.getPhoneNumberSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getCarrier, getCarrierSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios'],\n  getter: () => RNDeviceInfo.getCarrier(),\n  syncGetter: () => RNDeviceInfo.getCarrierSync(),\n  defaultValue: 'unknown',\n});\n\nexport const [getTotalMemory, getTotalMemorySync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'totalMemory',\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getTotalMemory(),\n  syncGetter: () => RNDeviceInfo.getTotalMemorySync(),\n  defaultValue: -1,\n});\n\nexport const [getMaxMemory, getMaxMemorySync] = getSupportedPlatformInfoFunctions({\n  memoKey: 'maxMemory',\n  supportedPlatforms: ['android', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getMaxMemory(),\n  syncGetter: () => RNDeviceInfo.getMaxMemorySync(),\n  defaultValue: -1,\n});\n\nexport const [getTotalDiskCapacity, getTotalDiskCapacitySync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getTotalDiskCapacity(),\n  syncGetter: () => RNDeviceInfo.getTotalDiskCapacitySync(),\n  defaultValue: -1,\n});\n\nexport async function getTotalDiskCapacityOld() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getTotalDiskCapacityOld();\n  }\n  if (Platform.OS === 'ios' || Platform.OS === 'windows' || Platform.OS === 'web') {\n    return getTotalDiskCapacity();\n  }\n\n  return -1;\n}\n\nexport function getTotalDiskCapacityOldSync() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getTotalDiskCapacityOldSync();\n  }\n  if (Platform.OS === 'ios' || Platform.OS === 'windows' || Platform.OS === 'web') {\n    return getTotalDiskCapacitySync();\n  }\n\n  return -1;\n}\n\nexport const [getFreeDiskStorage, getFreeDiskStorageSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getFreeDiskStorage(),\n  syncGetter: () => RNDeviceInfo.getFreeDiskStorageSync(),\n  defaultValue: -1,\n});\n\nexport async function getFreeDiskStorageOld() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getFreeDiskStorageOld();\n  }\n  if (Platform.OS === 'ios' || Platform.OS === 'windows' || Platform.OS === 'web') {\n    return getFreeDiskStorage();\n  }\n\n  return -1;\n}\n\nexport function getFreeDiskStorageOldSync() {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.getFreeDiskStorageOldSync();\n  }\n  if (Platform.OS === 'ios' || Platform.OS === 'windows' || Platform.OS === 'web') {\n    return getFreeDiskStorageSync();\n  }\n\n  return -1;\n}\n\nexport const [getBatteryLevel, getBatteryLevelSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getBatteryLevel(),\n  syncGetter: () => RNDeviceInfo.getBatteryLevelSync(),\n  defaultValue: -1,\n});\n\nexport const [getPowerState, getPowerStateSync] = getSupportedPlatformInfoFunctions<\n  Partial<PowerState>\n>({\n  supportedPlatforms: ['ios', 'android', 'windows', 'web'],\n  getter: () => RNDeviceInfo.getPowerState(),\n  syncGetter: () => RNDeviceInfo.getPowerStateSync(),\n  defaultValue: {},\n});\n\nexport const [isBatteryCharging, isBatteryChargingSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'windows', 'web'],\n  getter: () => RNDeviceInfo.isBatteryCharging(),\n  syncGetter: () => RNDeviceInfo.isBatteryChargingSync(),\n  defaultValue: false,\n});\n\nexport async function isLandscape() {\n  return Promise.resolve(isLandscapeSync());\n}\n\nexport function isLandscapeSync() {\n  const { height, width } = Dimensions.get('window');\n  return width >= height;\n}\n\nexport const [isAirplaneMode, isAirplaneModeSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'web'],\n  getter: () => RNDeviceInfo.isAirplaneMode(),\n  syncGetter: () => RNDeviceInfo.isAirplaneModeSync(),\n  defaultValue: false,\n});\n\nexport const getDeviceType = () => {\n  return getSupportedPlatformInfoSync({\n    memoKey: 'deviceType',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    defaultValue: 'unknown',\n    getter: () => RNDeviceInfo.deviceType,\n  });\n};\n\nexport const getDeviceTypeSync = () => {\n  return getSupportedPlatformInfoSync({\n    memoKey: 'deviceType',\n    supportedPlatforms: ['android', 'ios', 'windows'],\n    defaultValue: 'unknown',\n    getter: () => RNDeviceInfo.deviceType,\n  });\n};\n\nexport const [supportedAbis, supportedAbisSync] = getSupportedPlatformInfoFunctions({\n  memoKey: '_supportedAbis',\n  supportedPlatforms: ['android', 'ios', 'windows'],\n  getter: () => RNDeviceInfo.getSupportedAbis(),\n  syncGetter: () => RNDeviceInfo.getSupportedAbisSync(),\n  defaultValue: [] as string[],\n});\n\nexport const [supported32BitAbis, supported32BitAbisSync] = getSupportedPlatformInfoFunctions({\n  memoKey: '_supported32BitAbis',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getSupported32BitAbis(),\n  syncGetter: () => RNDeviceInfo.getSupported32BitAbisSync(),\n  defaultValue: [] as string[],\n});\n\nexport const [supported64BitAbis, supported64BitAbisSync] = getSupportedPlatformInfoFunctions({\n  memoKey: '_supported64BitAbis',\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getSupported64BitAbis(),\n  syncGetter: () => RNDeviceInfo.getSupported64BitAbisSync(),\n  defaultValue: [],\n});\n\nexport async function hasSystemFeature(feature: string) {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.hasSystemFeature(feature);\n  }\n  return false;\n}\n\nexport function hasSystemFeatureSync(feature: string) {\n  if (Platform.OS === 'android') {\n    return RNDeviceInfo.hasSystemFeatureSync(feature);\n  }\n  return false;\n}\n\nexport function isLowBatteryLevel(level: number): boolean {\n  if (Platform.OS === 'android') {\n    return level < 0.15;\n  }\n  return level < 0.2;\n}\n\nexport const [\n  getSystemAvailableFeatures,\n  getSystemAvailableFeaturesSync,\n] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android'],\n  getter: () => RNDeviceInfo.getSystemAvailableFeatures(),\n  syncGetter: () => RNDeviceInfo.getSystemAvailableFeaturesSync(),\n  defaultValue: [] as string[],\n});\n\nexport const [isLocationEnabled, isLocationEnabledSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios', 'web'],\n  getter: () => RNDeviceInfo.isLocationEnabled(),\n  syncGetter: () => RNDeviceInfo.isLocationEnabledSync(),\n  defaultValue: false,\n});\n\nexport const [isHeadphonesConnected, isHeadphonesConnectedSync] = getSupportedPlatformInfoFunctions(\n  {\n    supportedPlatforms: ['android', 'ios'],\n    getter: () => RNDeviceInfo.isHeadphonesConnected(),\n    syncGetter: () => RNDeviceInfo.isHeadphonesConnectedSync(),\n    defaultValue: false,\n  }\n);\n\nexport const [isMouseConnected, isMouseConnectedSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['windows'],\n  getter: () => RNDeviceInfo.isMouseConnected(),\n  syncGetter: () => RNDeviceInfo.isMouseConnectedSync(),\n  defaultValue: false,\n});\n\nexport const [isKeyboardConnected, isKeyboardConnectedSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['windows'],\n  getter: () => RNDeviceInfo.isKeyboardConnected(),\n  syncGetter: () => RNDeviceInfo.isKeyboardConnectedSync(),\n  defaultValue: false,\n});\n\nexport const isTabletMode = () =>\n  getSupportedPlatformInfoAsync({\n    supportedPlatforms: ['windows'],\n    getter: () => RNDeviceInfo.isTabletMode(),\n    defaultValue: false,\n  });\n\nexport const [\n  getAvailableLocationProviders,\n  getAvailableLocationProvidersSync,\n] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['android', 'ios'],\n  getter: () => RNDeviceInfo.getAvailableLocationProviders(),\n  syncGetter: () => RNDeviceInfo.getAvailableLocationProvidersSync(),\n  defaultValue: {},\n});\n\nexport const [getBrightness, getBrightnessSync] = getSupportedPlatformInfoFunctions({\n  supportedPlatforms: ['ios'],\n  getter: () => RNDeviceInfo.getBrightness(),\n  syncGetter: () => RNDeviceInfo.getBrightnessSync(),\n  defaultValue: -1,\n});\n\nexport async function getDeviceToken() {\n  if (Platform.OS === 'ios') {\n    return RNDeviceInfo.getDeviceToken();\n  }\n  return 'unknown';\n}\n\nconst deviceInfoEmitter = new NativeEventEmitter(NativeModules.RNDeviceInfo);\nexport function useBatteryLevel(): number | null {\n  const [batteryLevel, setBatteryLevel] = useState<number | null>(null);\n\n  useEffect(() => {\n    const setInitialValue = async () => {\n      const initialValue: number = await getBatteryLevel();\n      setBatteryLevel(initialValue);\n    };\n\n    const onChange = (level: number) => {\n      setBatteryLevel(level);\n    };\n\n    setInitialValue();\n\n    const subscription = deviceInfoEmitter.addListener(\n      'RNDeviceInfo_batteryLevelDidChange',\n      onChange\n    );\n\n    return () => subscription.remove();\n  }, []);\n\n  return batteryLevel;\n}\n\nexport function useBatteryLevelIsLow(): number | null {\n  const [batteryLevelIsLow, setBatteryLevelIsLow] = useState<number | null>(null);\n\n  useEffect(() => {\n    const setInitialValue = async () => {\n      const initialValue: number = await getBatteryLevel();\n      isLowBatteryLevel(initialValue) && setBatteryLevelIsLow(initialValue);\n    };\n\n    setInitialValue();\n\n    const onChange = (level: number) => {\n      setBatteryLevelIsLow(level);\n    };\n\n    const subscription = deviceInfoEmitter.addListener('RNDeviceInfo_batteryLevelIsLow', onChange);\n\n    return () => subscription.remove();\n  }, []);\n\n  return batteryLevelIsLow;\n}\n\nexport function usePowerState(): Partial<PowerState> {\n  const [powerState, setPowerState] = useState<Partial<PowerState>>({});\n\n  useEffect(() => {\n    const setInitialValue = async () => {\n      const initialValue: Partial<PowerState> = await getPowerState();\n      setPowerState(initialValue);\n    };\n\n    const onChange = (state: PowerState) => {\n      setPowerState(state);\n    };\n\n    setInitialValue();\n\n    const subscription = deviceInfoEmitter.addListener(\n      'RNDeviceInfo_powerStateDidChange',\n      onChange\n    );\n\n    return () => subscription.remove();\n  }, []);\n\n  return powerState;\n}\n\nexport function useIsHeadphonesConnected(): AsyncHookResult<boolean> {\n  return useOnEvent('RNDeviceInfo_headphoneConnectionDidChange', isHeadphonesConnected, false);\n}\n\nexport function useFirstInstallTime(): AsyncHookResult<number> {\n  return useOnMount(getFirstInstallTime, -1);\n}\n\nexport function useDeviceName(): AsyncHookResult<string> {\n  return useOnMount(getDeviceName, 'unknown');\n}\n\nexport function useHasSystemFeature(feature: string): AsyncHookResult<boolean> {\n  const asyncGetter = useCallback(() => hasSystemFeature(feature), [feature]);\n  return useOnMount(asyncGetter, false);\n}\n\nexport function useIsEmulator(): AsyncHookResult<boolean> {\n  return useOnMount(isEmulator, false);\n}\n\nexport function useManufacturer(): AsyncHookResult<string> {\n  return useOnMount(getManufacturer, 'unknown');\n}\n\nexport function useBrightness(): number | null {\n  const [brightness, setBrightness] = useState<number | null>(null);\n\n  useEffect(() => {\n    const setInitialValue = async () => {\n      const initialValue: number = await getBrightness();\n      setBrightness(initialValue);\n    };\n\n    const onChange = (value: number) => {\n      setBrightness(value);\n    };\n\n    setInitialValue();\n\n    const subscription = deviceInfoEmitter.addListener(\n      'RNDeviceInfo_brightnessDidChange',\n      onChange\n    );\n\n    return () => subscription.remove();\n  }, []);\n\n  return brightness;\n}\n\nexport type { AsyncHookResult, DeviceType, LocationProviderInfo, PowerState };\n\nconst DeviceInfo: DeviceInfoModule = {\n  getAndroidId,\n  getAndroidIdSync,\n  getApiLevel,\n  getApiLevelSync,\n  getApplicationName,\n  getAvailableLocationProviders,\n  getAvailableLocationProvidersSync,\n  getBaseOs,\n  getBaseOsSync,\n  getBatteryLevel,\n  getBatteryLevelSync,\n  getBootloader,\n  getBootloaderSync,\n  getBrand,\n  getBuildId,\n  getBuildIdSync,\n  getBuildNumber,\n  getBundleId,\n  getCarrier,\n  getCarrierSync,\n  getCodename,\n  getCodenameSync,\n  getDevice,\n  getDeviceId,\n  getDeviceName,\n  getDeviceNameSync,\n  getDeviceSync,\n  getDeviceToken,\n  getDeviceType,\n  getDisplay,\n  getDisplaySync,\n  getFingerprint,\n  getFingerprintSync,\n  getFirstInstallTime,\n  getFirstInstallTimeSync,\n  getFontScale,\n  getFontScaleSync,\n  getFreeDiskStorage,\n  getFreeDiskStorageOld,\n  getFreeDiskStorageSync,\n  getFreeDiskStorageOldSync,\n  getHardware,\n  getHardwareSync,\n  getHost,\n  getHostSync,\n  getHostNames,\n  getHostNamesSync,\n  getIncremental,\n  getIncrementalSync,\n  getInstallerPackageName,\n  getInstallerPackageNameSync,\n  getInstallReferrer,\n  getInstallReferrerSync,\n  getInstanceId,\n  getInstanceIdSync,\n  getIpAddress,\n  getIpAddressSync,\n  getLastUpdateTime,\n  getLastUpdateTimeSync,\n  getMacAddress,\n  getMacAddressSync,\n  getManufacturer,\n  getManufacturerSync,\n  getMaxMemory,\n  getMaxMemorySync,\n  getModel,\n  getPhoneNumber,\n  getPhoneNumberSync,\n  getPowerState,\n  getPowerStateSync,\n  getPreviewSdkInt,\n  getPreviewSdkIntSync,\n  getProduct,\n  getProductSync,\n  getReadableVersion,\n  getSecurityPatch,\n  getSecurityPatchSync,\n  getSerialNumber,\n  getSerialNumberSync,\n  getSystemAvailableFeatures,\n  getSystemAvailableFeaturesSync,\n  getSystemName,\n  getSystemVersion,\n  getTags,\n  getTagsSync,\n  getTotalDiskCapacity,\n  getTotalDiskCapacityOld,\n  getTotalDiskCapacitySync,\n  getTotalDiskCapacityOldSync,\n  getTotalMemory,\n  getTotalMemorySync,\n  getType,\n  getTypeSync,\n  getUniqueId,\n  getUniqueIdSync,\n  getUsedMemory,\n  getUsedMemorySync,\n  getUserAgent,\n  getUserAgentSync,\n  getVersion,\n  getBrightness,\n  getBrightnessSync,\n  hasGms,\n  hasGmsSync,\n  hasHms,\n  hasHmsSync,\n  hasNotch,\n  hasDynamicIsland,\n  hasSystemFeature,\n  hasSystemFeatureSync,\n  isAirplaneMode,\n  isAirplaneModeSync,\n  isBatteryCharging,\n  isBatteryChargingSync,\n  isCameraPresent,\n  isCameraPresentSync,\n  isEmulator,\n  isEmulatorSync,\n  isHeadphonesConnected,\n  isHeadphonesConnectedSync,\n  isLandscape,\n  isLandscapeSync,\n  isLocationEnabled,\n  isLocationEnabledSync,\n  isPinOrFingerprintSet,\n  isPinOrFingerprintSetSync,\n  isMouseConnected,\n  isMouseConnectedSync,\n  isKeyboardConnected,\n  isKeyboardConnectedSync,\n  isTabletMode,\n  isTablet,\n  isDisplayZoomed,\n  supported32BitAbis,\n  supported32BitAbisSync,\n  supported64BitAbis,\n  supported64BitAbisSync,\n  supportedAbis,\n  supportedAbisSync,\n  syncUniqueId,\n  useBatteryLevel,\n  useBatteryLevelIsLow,\n  useDeviceName,\n  useFirstInstallTime,\n  useHasSystemFeature,\n  useIsEmulator,\n  usePowerState,\n  useManufacturer,\n  useIsHeadphonesConnected,\n  useBrightness,\n};\n\nexport default DeviceInfo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}