{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"title\", \"textProps\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Button = function Button(_ref) {\n  var title = _ref.title,\n    textProps = _ref.textProps,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return _jsx(TouchableOpacity, _objectSpread(_objectSpread({}, props), {}, {\n    children: _jsx(Text, {\n      style: textProps,\n      children: title\n    })\n  }));\n};\nexport default Button;","map":{"version":3,"names":["React","TouchableOpacity","Text","jsx","_jsx","Button","_ref","title","textProps","props","_objectWithoutProperties","_excluded","_objectSpread","children","style"],"sources":["/Users/sharmalperera/projects/apps/ExpoTemplateAppWithComponent/src/Button.tsx"],"sourcesContent":["import React from 'react';\nimport { TouchableOpacity, Text, TouchableOpacityProps, TextStyle } from 'react-native';\n\ninterface ButtonProps extends TouchableOpacityProps {\n  title: string;\n  textProps?: TextStyle;\n}\n\nconst Button: React.FC<ButtonProps> = ({ title, textProps, ...props }) => {\n  return (\n    <TouchableOpacity {...props}>\n      <Text style={textProps}>{title}</Text>\n    </TouchableOpacity>\n  );\n};\n\nexport default Button;\n"],"mappings":";;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAQ1B,IAAMC,MAA6B,GAAG,SAAhCA,MAA6BA,CAAAC,IAAA,EAAuC;EAAA,IAAjCC,KAAK,GAAAD,IAAA,CAALC,KAAK;IAAEC,SAAS,GAAAF,IAAA,CAATE,SAAS;IAAKC,KAAK,GAAAC,wBAAA,CAAAJ,IAAA,EAAAK,SAAA;EACjE,OACEP,IAAA,CAACH,gBAAgB,EAAAW,aAAA,CAAAA,aAAA,KAAKH,KAAK;IAAAI,QAAA,EACzBT,IAAA,CAACF,IAAI;MAACY,KAAK,EAAEN,SAAU;MAAAK,QAAA,EAAEN;IAAK,CAAO;EAAC,EACtB,CAAC;AAEvB,CAAC;AAED,eAAeF,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}