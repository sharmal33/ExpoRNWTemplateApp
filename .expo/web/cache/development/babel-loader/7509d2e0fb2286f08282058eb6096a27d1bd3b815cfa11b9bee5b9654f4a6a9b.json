{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nvar _class;\nimport env from \"../../../../src/env\";\nexport var WalletService = function () {\n  function WalletService() {\n    var _this = this;\n    _classCallCheck(this, WalletService);\n    this._walletClient = void 0;\n    this.initClients = function (clients) {\n      _this._walletClient = clients.walletClient;\n    };\n    this.getWallets = function () {\n      var _ref = _asyncToGenerator(function* (page, pageSize, type) {\n        try {\n          if (!_this._walletClient) {\n            throw new Error('Wallet Client is not registered');\n          }\n          var url = `wallets?bankId=${env.api.bankId}&page=${page}&pageSize=${pageSize}`;\n          if (type) {\n            url += `&type=${type}`;\n          }\n          var response = yield _this._walletClient.get(url);\n          return response.data;\n        } catch (error) {\n          throw new Error('Failed to get wallet list: ' + error);\n        }\n      });\n      return function (_x, _x2, _x3) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    if (WalletService._instance) {\n      throw new Error('Error: Instantiation failed: Use WalletService.getInstance() instead of new.');\n    }\n    WalletService._instance = this;\n  }\n  _createClass(WalletService, null, [{\n    key: \"instance\",\n    value: function instance() {\n      return WalletService._instance;\n    }\n  }]);\n  return WalletService;\n}();\n_class = WalletService;\nWalletService._instance = new _class();","map":{"version":3,"names":["env","WalletService","_this","_classCallCheck","_walletClient","initClients","clients","walletClient","getWallets","_ref","_asyncToGenerator","page","pageSize","type","Error","url","api","bankId","response","get","data","error","_x","_x2","_x3","apply","arguments","_instance","_createClass","key","value","instance","_class"],"sources":["/Users/sharmalperera/projects/apps/ExpoTemplateAppWithComponent/node_modules/react-native-dashboard-component/src/services/WalletService.tsx"],"sourcesContent":["import env from '@/env';\ntype WalletClient = any; // Replace with the appropriate AxiosInstance type\n\nexport class WalletService {\n    private static _instance: WalletService = new WalletService();\n    private _walletClient?: WalletClient;\n\n    private constructor() {\n        if (WalletService._instance) {\n            throw new Error(\n                'Error: Instantiation failed: Use WalletService.getInstance() instead of new.'\n            );\n        }\n        WalletService._instance = this;\n    }\n\n    public static instance(): WalletService {\n        return WalletService._instance;\n    }\n\n    public initClients = (clients: { walletClient: WalletClient }) => {\n        this._walletClient = clients.walletClient;\n    }\n\n\n    getWallets = async (page: number, pageSize: number, type?: string) => {\n      try {\n        if (!this._walletClient) {\n          throw new Error('Wallet Client is not registered');\n        }\n\n        let url = `wallets?bankId=${env.api.bankId}&page=${page}&pageSize=${pageSize}`;\n\n        if (type) {\n          url += `&type=${type}`;\n        }\n\n        const response = await this._walletClient.get(url);\n        return response.data;\n      } catch (error) {\n        throw new Error('Failed to get wallet list: ' + error);\n      }\n    }\n\n\n}\n"],"mappings":";;;;AAAA,OAAOA,GAAG;AAGV,WAAaC,aAAa;EAItB,SAAAA,cAAA,EAAsB;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAF,aAAA;IAAA,KAFdG,aAAa;IAAA,KAedC,WAAW,GAAG,UAACC,OAAuC,EAAK;MAC9DJ,KAAI,CAACE,aAAa,GAAGE,OAAO,CAACC,YAAY;IAC7C,CAAC;IAAA,KAGDC,UAAU;MAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,WAAOC,IAAY,EAAEC,QAAgB,EAAEC,IAAa,EAAK;QACpE,IAAI;UACF,IAAI,CAACX,KAAI,CAACE,aAAa,EAAE;YACvB,MAAM,IAAIU,KAAK,CAAC,iCAAiC,CAAC;UACpD;UAEA,IAAIC,GAAG,GAAI,kBAAiBf,GAAG,CAACgB,GAAG,CAACC,MAAO,SAAQN,IAAK,aAAYC,QAAS,EAAC;UAE9E,IAAIC,IAAI,EAAE;YACRE,GAAG,IAAK,SAAQF,IAAK,EAAC;UACxB;UAEA,IAAMK,QAAQ,SAAShB,KAAI,CAACE,aAAa,CAACe,GAAG,CAACJ,GAAG,CAAC;UAClD,OAAOG,QAAQ,CAACE,IAAI;QACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;UACd,MAAM,IAAIP,KAAK,CAAC,6BAA6B,GAAGO,KAAK,CAAC;QACxD;MACF,CAAC;MAAA,iBAAAC,EAAA,EAAAC,GAAA,EAAAC,GAAA;QAAA,OAAAf,IAAA,CAAAgB,KAAA,OAAAC,SAAA;MAAA;IAAA;IAlCG,IAAIzB,aAAa,CAAC0B,SAAS,EAAE;MACzB,MAAM,IAAIb,KAAK,CACX,8EACJ,CAAC;IACL;IACAb,aAAa,CAAC0B,SAAS,GAAG,IAAI;EAClC;EAACC,YAAA,CAAA3B,aAAA;IAAA4B,GAAA;IAAAC,KAAA,EAED,SAAAC,SAAA,EAAwC;MACpC,OAAO9B,aAAa,CAAC0B,SAAS;IAClC;EAAC;EAAA,OAAA1B,aAAA;AAAA;AA2BJ+B,MAAA,GA1CY/B,aAAa;AAAbA,aAAa,CACP0B,SAAS,GAAkB,IAAI1B,MAAa,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}