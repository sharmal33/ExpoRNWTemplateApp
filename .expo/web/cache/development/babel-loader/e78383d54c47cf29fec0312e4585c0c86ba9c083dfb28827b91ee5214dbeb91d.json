{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _excluded = [\"syncGetter\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport Platform from \"react-native-web/dist/exports/Platform\";\nvar memo = {};\nexport function clearMemo() {\n  memo = {};\n}\nfunction getSupportedFunction(supportedPlatforms, getter, defaultGetter) {\n  var supportedMap = {};\n  supportedPlatforms.filter(function (key) {\n    return Platform.OS == key;\n  }).forEach(function (key) {\n    return supportedMap[key] = getter;\n  });\n  return Platform.select(_objectSpread(_objectSpread({}, supportedMap), {}, {\n    default: defaultGetter\n  }));\n}\nexport function getSupportedPlatformInfoSync(_ref) {\n  var getter = _ref.getter,\n    supportedPlatforms = _ref.supportedPlatforms,\n    defaultValue = _ref.defaultValue,\n    memoKey = _ref.memoKey;\n  if (memoKey && memo[memoKey] != undefined) {\n    return memo[memoKey];\n  } else {\n    var output = getSupportedFunction(supportedPlatforms, getter, function () {\n      return defaultValue;\n    })();\n    if (memoKey) {\n      memo[memoKey] = output;\n    }\n    return output;\n  }\n}\nexport function getSupportedPlatformInfoAsync(_x) {\n  return _getSupportedPlatformInfoAsync.apply(this, arguments);\n}\nfunction _getSupportedPlatformInfoAsync() {\n  _getSupportedPlatformInfoAsync = _asyncToGenerator(function* (_ref2) {\n    var getter = _ref2.getter,\n      supportedPlatforms = _ref2.supportedPlatforms,\n      defaultValue = _ref2.defaultValue,\n      memoKey = _ref2.memoKey;\n    if (memoKey && memo[memoKey] != undefined) {\n      return memo[memoKey];\n    } else {\n      var output = yield getSupportedFunction(supportedPlatforms, getter, function () {\n        return Promise.resolve(defaultValue);\n      })();\n      if (memoKey) {\n        memo[memoKey] = output;\n      }\n      return output;\n    }\n  });\n  return _getSupportedPlatformInfoAsync.apply(this, arguments);\n}\nexport function getSupportedPlatformInfoFunctions(_ref3) {\n  var syncGetter = _ref3.syncGetter,\n    asyncParams = _objectWithoutProperties(_ref3, _excluded);\n  return [function () {\n    return getSupportedPlatformInfoAsync(asyncParams);\n  }, function () {\n    return getSupportedPlatformInfoSync(_objectSpread(_objectSpread({}, asyncParams), {}, {\n      getter: syncGetter\n    }));\n  }];\n}","map":{"version":3,"names":["memo","clearMemo","getSupportedFunction","supportedPlatforms","getter","defaultGetter","supportedMap","filter","key","Platform","OS","forEach","select","_objectSpread","default","getSupportedPlatformInfoSync","_ref","defaultValue","memoKey","undefined","output","getSupportedPlatformInfoAsync","_x","_getSupportedPlatformInfoAsync","apply","arguments","_asyncToGenerator","_ref2","Promise","resolve","getSupportedPlatformInfoFunctions","_ref3","syncGetter","asyncParams","_objectWithoutProperties","_excluded"],"sources":["/Users/sharmalperera/projects/apps/ExpoTemplateAppWithComponent/node_modules/react-native-device-info/lib/module/internal/supported-platform-info.ts"],"sourcesContent":["import { Platform } from 'react-native';\n\nimport {\n  PlatformArray,\n  Getter,\n  GetSupportedPlatformInfoAsyncParams,\n  GetSupportedPlatformInfoSyncParams,\n  GetSupportedPlatformInfoFunctionsParams,\n} from './privateTypes';\n\ntype MemoType = { [key: string]: any };\n// centralized memo object\nlet memo: MemoType = {};\n\nexport function clearMemo() {\n  memo = {};\n}\n\n/**\n * function returns the proper getter based current platform X supported platforms\n * @param supportedPlatforms array of supported platforms (OS)\n * @param getter desired function used to get info\n * @param defaultGetter getter that returns a default value if desired getter is not supported by current platform\n */\nfunction getSupportedFunction<T>(\n  supportedPlatforms: PlatformArray,\n  getter: Getter<T>,\n  defaultGetter: Getter<T>\n): Getter<T> {\n  let supportedMap: any = {};\n  supportedPlatforms\n    .filter((key) => Platform.OS == key)\n    .forEach((key) => (supportedMap[key] = getter));\n  return Platform.select({\n    ...supportedMap,\n    default: defaultGetter,\n  });\n}\n\n/**\n * function used to get desired info synchronously — with optional memoization\n * @param param0\n */\nexport function getSupportedPlatformInfoSync<T>({\n  getter,\n  supportedPlatforms,\n  defaultValue,\n  memoKey,\n}: GetSupportedPlatformInfoSyncParams<T>): T {\n  if (memoKey && memo[memoKey] != undefined) {\n    return memo[memoKey];\n  } else {\n    const output = getSupportedFunction(supportedPlatforms, getter, () => defaultValue)();\n    if (memoKey) {\n      memo[memoKey] = output;\n    }\n    return output;\n  }\n}\n\n/**\n * function used to get desired info asynchronously — with optional memoization\n * @param param0\n */\nexport async function getSupportedPlatformInfoAsync<T>({\n  getter,\n  supportedPlatforms,\n  defaultValue,\n  memoKey,\n}: GetSupportedPlatformInfoAsyncParams<T>): Promise<T> {\n  if (memoKey && memo[memoKey] != undefined) {\n    return memo[memoKey];\n  } else {\n    const output = await getSupportedFunction(supportedPlatforms, getter, () =>\n      Promise.resolve(defaultValue)\n    )();\n    if (memoKey) {\n      memo[memoKey] = output;\n    }\n\n    return output;\n  }\n}\n\n/**\n * function that returns array of getter functions [async, sync]\n * @param param0\n */\nexport function getSupportedPlatformInfoFunctions<T>({\n  syncGetter,\n  ...asyncParams\n}: GetSupportedPlatformInfoFunctionsParams<T>): [Getter<Promise<T>>, Getter<T>] {\n  return [\n    () => getSupportedPlatformInfoAsync(asyncParams),\n    () => getSupportedPlatformInfoSync({ ...asyncParams, getter: syncGetter }),\n  ];\n}\n"],"mappings":";;;;;;;AAYA,IAAIA,IAAc,GAAG,EAArB;AAEA,OAAO,SAASC,SAATA,CAAA,EAAqB;EAC1BD,IAAI,GAAG,EAAP;AACD;AAQD,SAASE,oBAATA,CACEC,kBADF,EAEEC,MAFF,EAGEC,aAHF,EAIa;EACX,IAAIC,YAAiB,GAAG,EAAxB;EACAH,kBAAkB,CACfI,MADH,CACW,UAAAC,GAAD;IAAA,OAASC,QAAQ,CAACC,EAAT,IAAeF,GADlC;EAAA,GAEGG,OAFH,CAEY,UAAAH,GAAD;IAAA,OAAUF,YAAY,CAACE,GAAD,CAAZ,GAAoBJ,MAFzC;EAAA;EAGA,OAAOK,QAAQ,CAACG,MAAT,CAAAC,aAAA,CAAAA,aAAA,KACFP,YADkB;IAErBQ,OAAO,EAAET;EAAA,EAFJ,CAAP;AAID;AAMD,OAAO,SAASU,4BAATA,CAAAC,IAAA,EAKsC;EAAA,IAJ3CZ,MAD8C,GAAAY,IAAA,CAC9CZ,MAD8C;IAE9CD,kBAF8C,GAAAa,IAAA,CAE9Cb,kBAF8C;IAG9Cc,YAH8C,GAAAD,IAAA,CAG9CC,YAH8C;IAI9CC,OAAA,GAAAF,IAAA,CAAAE,OAAA;EAEA,IAAIA,OAAO,IAAIlB,IAAI,CAACkB,OAAD,CAAJ,IAAiBC,SAAhC,EAA2C;IACzC,OAAOnB,IAAI,CAACkB,OAAD,CAAX;EACD,CAFD,MAEO;IACL,IAAME,MAAM,GAAGlB,oBAAoB,CAACC,kBAAD,EAAqBC,MAArB,EAA6B;MAAA,OAAMa,YAAnC;IAAA,EAApB,EAAf;IACA,IAAIC,OAAJ,EAAa;MACXlB,IAAI,CAACkB,OAAD,CAAJ,GAAgBE,MAAhB;IACD;IACD,OAAOA,MAAP;EACD;AACF;AAMD,gBAAsBC,6BAAfA,CAAAC,EAAA;EAAA,OAAAC,8BAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAkBN,SAAAF,+BAAA;EAAAA,8BAAA,GAAAG,iBAAA,CAlBM,WAAAC,KAAA,EAKgD;IAAA,IAJrDvB,MADqD,GAAAuB,KAAA,CACrDvB,MADqD;MAErDD,kBAFqD,GAAAwB,KAAA,CAErDxB,kBAFqD;MAGrDc,YAHqD,GAAAU,KAAA,CAGrDV,YAHqD;MAIrDC,OAAA,GAAAS,KAAA,CAAAT,OAAA;IAEA,IAAIA,OAAO,IAAIlB,IAAI,CAACkB,OAAD,CAAJ,IAAiBC,SAAhC,EAA2C;MACzC,OAAOnB,IAAI,CAACkB,OAAD,CAAX;IACD,CAFD,MAEO;MACL,IAAME,MAAM,SAASlB,oBAAoB,CAACC,kBAAD,EAAqBC,MAArB,EAA6B;QAAA,OACpEwB,OAAO,CAACC,OAAR,CAAgBZ,YAAhB,CADuC;MAAA,EAApB,EAArB;MAGA,IAAIC,OAAJ,EAAa;QACXlB,IAAI,CAACkB,OAAD,CAAJ,GAAgBE,MAAhB;MACD;MAED,OAAOA,MAAP;IACD;EACF;EAAA,OAAAG,8BAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAMD,OAAO,SAASK,iCAATA,CAAAC,KAAA,EAGyE;EAAA,IAF9EC,UADmD,GAAAD,KAAA,CACnDC,UADmD;IAEhDC,WAAA,GAAAC,wBAAA,CAAAH,KAAA,EAAAI,SAAA;EAEH,OAAO,CACL;IAAA,OAAMd,6BAA6B,CAACY,WAAD,CAD9B;EAAA,GAEL;IAAA,OAAMlB,4BAA4B,CAAAF,aAAA,CAAAA,aAAA,KAAMoB,WAAL;MAAkB7B,MAAM,EAAE4B;IAAA,EAA3B,CAF7B;EAAA,EAAP;AAID"},"metadata":{},"sourceType":"module","externalDependencies":[]}