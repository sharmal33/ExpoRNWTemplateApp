{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport axios from 'axios';\nimport DeviceEventEmitter from \"react-native-web/dist/exports/DeviceEventEmitter\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { authService } from \"../AuthService\";\nimport * as DeviceInfo from 'expo-device';\nimport { getSecureData, removeToken } from \"../../../../../src/utils/keychainStorage\";\nvar failedQueue = [];\nvar forceLogout = function () {\n  var _ref = _asyncToGenerator(function* () {\n    DeviceEventEmitter.emit('authcomponent.session.expired');\n  });\n  return function forceLogout() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var createAuthorizedApiClient = function createAuthorizedApiClient(baseURL) {\n  var instance = axios.create({\n    baseURL: baseURL\n  });\n  var processQueue = function processQueue(error, accessToken) {\n    failedQueue.forEach(function (prom) {\n      if (error) {\n        prom.reject(error);\n      } else {\n        prom.resolve({\n          accessToken: accessToken\n        });\n      }\n    });\n    failedQueue = [];\n  };\n  var onRequest = function () {\n    var _ref2 = _asyncToGenerator(function* (request) {\n      var accessToken = yield getSecureData('access_token');\n      var httpClient = 'Axios';\n      var platform = `${Platform.OS}/${DeviceInfo.osVersion}`;\n      var security = 'U';\n      var os = `${Platform.OS === 'ios' ? 'ios' : DeviceInfo.osName}/${DeviceInfo.osVersion}`;\n      var localization = authService.getLocale();\n      var mobileAppNameAndVersion = `${DeviceInfo.productName}/${DeviceInfo.osVersion}`;\n      if (accessToken) {\n        request.headers.Authorization = `Bearer ${accessToken}`;\n        request.headers['user-agent'] = `${httpClient} (${platform} ; ${security} ; ${os} ; ${localization} ; ${mobileAppNameAndVersion} )`;\n      }\n      return request;\n    });\n    return function onRequest(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var onResponseSuccess = function onResponseSuccess(response) {\n    if (response.message === 'Network Error') {\n      DeviceEventEmitter.emit('network_error');\n    } else if (response.message === 'Request failed with status code 401') {\n      DeviceEventEmitter.emit('authcomponent.session.expired');\n      removeToken('access_token');\n    }\n    return response;\n  };\n  var onResponseFailed = function onResponseFailed(error) {\n    if (error.message === 'Network Error') {\n      DeviceEventEmitter.emit('network_error');\n    } else if (error.message === 'Request failed with status code 401') {\n      DeviceEventEmitter.emit('authcomponent.session.expired');\n      removeToken('access_token');\n    }\n    throw error;\n  };\n  instance.interceptors.request.use(onRequest);\n  instance.interceptors.response.use(onResponseSuccess, onResponseFailed);\n  return instance;\n};","map":{"version":3,"names":["axios","DeviceEventEmitter","Platform","authService","DeviceInfo","getSecureData","removeToken","failedQueue","forceLogout","_ref","_asyncToGenerator","emit","apply","arguments","createAuthorizedApiClient","baseURL","instance","create","processQueue","error","accessToken","forEach","prom","reject","resolve","onRequest","_ref2","request","httpClient","platform","OS","osVersion","security","os","osName","localization","getLocale","mobileAppNameAndVersion","productName","headers","Authorization","_x","onResponseSuccess","response","message","onResponseFailed","interceptors","use"],"sources":["/Users/sharmalperera/projects/apps/ExpoTemplateAppWithComponent/node_modules/react-native-auth-component/src/services/api-clients/AuthorizedApiClient.tsx"],"sourcesContent":["import axios, { AxiosRequestConfig, AxiosError, AxiosResponse } from 'axios';\nimport { DeviceEventEmitter, Platform, } from 'react-native';\nimport { authService } from '../AuthService';\n// import DeviceInfo from 'react-native-device-info';\nimport * as DeviceInfo from 'expo-device';\nimport { getSecureData,removeToken } from '@/utils/keychainStorage';\n\nlet failedQueue: any = [];\n\nconst forceLogout = async () => {\n  DeviceEventEmitter.emit('authcomponent.session.expired');\n};\n\nexport const createAuthorizedApiClient = (baseURL: string) => {\n\n  const instance = axios.create({\n    baseURL,\n  });\n\n  const processQueue = (error: any, accessToken?: string) => {\n    failedQueue.forEach((prom: any) => {\n      if (error) {\n        prom.reject(error);\n      } else {\n        prom.resolve({ accessToken });\n      }\n    });\n    failedQueue = [];\n  };\n\n  const onRequest = async (request: AxiosRequestConfig) => {\n    let accessToken = await getSecureData('access_token');\n    const httpClient = 'Axios';\n    const platform = `${Platform.OS}/${DeviceInfo.osVersion}`;\n    const security = 'U';\n    const os = `${\n      Platform.OS === 'ios' ? 'ios' : DeviceInfo.osName\n    }/${DeviceInfo.osVersion}`;\n    const localization = authService.getLocale();\n    const mobileAppNameAndVersion = `${DeviceInfo.productName}/${DeviceInfo.osVersion}`;\n\n    if (accessToken) {\n      request.headers.Authorization = `Bearer ${accessToken}`;\n      request.headers[\n        'user-agent'\n      ] = `${httpClient} (${platform} ; ${security} ; ${os} ; ${localization} ; ${mobileAppNameAndVersion} )`;\n    }\n    return request;\n  };\n\n  const onResponseSuccess = (response: AxiosResponse) => {\n\n    if(response.message === 'Network Error') {\n      DeviceEventEmitter.emit('network_error');\n    } else if (response.message === 'Request failed with status code 401') {\n      DeviceEventEmitter.emit('authcomponent.session.expired');\n      removeToken('access_token')\n    }\n\n    return response;\n  };\n\n  const onResponseFailed = (error: AxiosError) => {\n    if(error.message === 'Network Error') {\n      DeviceEventEmitter.emit('network_error');\n    } else if (error.message === 'Request failed with status code 401') {\n      DeviceEventEmitter.emit('authcomponent.session.expired');\n      removeToken('access_token')\n    }\n    throw error;\n  };\n\n  instance.interceptors.request.use(onRequest);\n  instance.interceptors.response.use(onResponseSuccess, onResponseFailed);\n\n  return instance;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}