{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { authService } from \"../services/AuthService\";\nimport { getSecureData, setSecureData, removeToken } from \"../../../../src/utils/keychainStorage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar AuthContext = createContext(undefined);\nexport var AuthProvider = function AuthProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    user = _useState2[0],\n    setUser = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  useEffect(function () {\n    var loadTokens = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        var access_token = yield getSecureData('access_token');\n        if (access_token) {\n          setUser({\n            access_token: access_token\n          });\n        }\n        setLoading(false);\n      });\n      return function loadTokens() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    loadTokens();\n  }, []);\n  var login = function () {\n    var _ref3 = _asyncToGenerator(function* (email, password) {\n      try {\n        var _yield$authService$lo = yield authService.login(email, password),\n          access_token = _yield$authService$lo.access_token;\n        yield setSecureData('access_token', access_token);\n        setUser({\n          access_token: access_token\n        });\n        return true;\n      } catch (error) {\n        console.log('Login failed', error);\n        throw new Error('Login failed');\n      }\n    });\n    return function login(_x, _x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var logout = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      yield setSecureData('access_token', '');\n      yield removeToken('access_token');\n      setUser(null);\n    });\n    return function logout() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  return _jsx(AuthContext.Provider, {\n    value: {\n      user: user,\n      loading: loading,\n      login: login,\n      logout: logout\n    },\n    children: children\n  });\n};\nexport var useAuth = function useAuth() {\n  var context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","authService","getSecureData","setSecureData","removeToken","jsx","_jsx","AuthContext","undefined","AuthProvider","_ref","children","_useState","_useState2","_slicedToArray","user","setUser","_useState3","_useState4","loading","setLoading","loadTokens","_ref2","_asyncToGenerator","access_token","apply","arguments","login","_ref3","email","password","_yield$authService$lo","error","console","log","Error","_x","_x2","logout","_ref4","Provider","value","useAuth","context"],"sources":["/Users/sharmalperera/projects/apps/ExpoTemplateAppWithComponent/node_modules/react-native-auth-component/src/context/AuthContext.tsx"],"sourcesContent":["// AuthContext.tsx\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { authService } from '../services/AuthService';\nimport { getSecureData, setSecureData, removeToken } from '@/utils/keychainStorage';\n\n// Define the user details interface\ninterface UserDetails {\n  firstName: string;\n  lastName: string;\n  email: string;\n  apps: { appName: string }[]; // Modify this to match app data structure\n}\n\n// Define the context value type for authentication\ninterface AuthContextType {\n  user: { access_token: string } | null;\n  loading: boolean;\n  login: (email: string, password: string) => Promise<boolean>;\n  logout: () => void;\n}\n\n// Create the authentication context\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const AuthProvider: React.FC = ({ children }) => {\n  const [user, setUser] = useState<{ access_token: string } | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Load tokens from secure storage when the app starts\n    const loadTokens = async () => {\n      const access_token = await getSecureData('access_token');\n\n      if (access_token) {\n        setUser({ access_token });\n      }\n\n      setLoading(false);\n    };\n\n    loadTokens();\n  }, []);\n\n  const login = async (email: string, password: string) => {\n    try {\n      const { access_token } = await authService.login(email, password); // Use authService here\n\n      // Store tokens securely using AsyncStorage\n      await setSecureData('access_token', access_token);\n\n      setUser({ access_token });\n\n      return true; // Successful login\n    } catch (error) {\n      console.log('Login failed', error);\n\n      throw new Error('Login failed');\n    }\n  };\n\n  const logout = async () => {\n    // Clear tokens from secure storage\n    await setSecureData('access_token', '');\n    await removeToken('access_token')\n    setUser(null);\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, loading, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}