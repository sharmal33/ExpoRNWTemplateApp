{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useForm, Controller } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { colors as defaultColors } from \"../../../../../src/assets/Colors\";\nimport { useAuth } from 'react-native-auth-component';\nimport { loginSchema } from \"./ValidationSchema\";\nimport { Button, Input } from 'react-native-theme-component';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginComponent = function LoginComponent(_ref) {\n  var loginSuccess = _ref.loginSuccess,\n    _ref$colors = _ref.colors,\n    colors = _ref$colors === void 0 ? defaultColors : _ref$colors,\n    title = _ref.title;\n  var _useAuth = useAuth(),\n    login = _useAuth.login;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    loginError = _useState2[0],\n    setLoginError = _useState2[1];\n  var _useForm = useForm({\n      resolver: yupResolver(loginSchema)\n    }),\n    control = _useForm.control,\n    handleSubmit = _useForm.handleSubmit,\n    setError = _useForm.setError,\n    errors = _useForm.formState.errors;\n  var onSubmit = function () {\n    var _ref3 = _asyncToGenerator(function* (_ref2) {\n      var email = _ref2.email,\n        password = _ref2.password;\n      try {\n        var response = yield login(email, password);\n        if (response === true) {\n          loginSuccess();\n        } else {\n          setLoginError('Login failed. Please check your credentials.');\n        }\n      } catch (error) {\n        console.log('error', error);\n        setLoginError('An error occurred during login. Please try again.');\n      }\n    });\n    return function onSubmit(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: title ? title : `Welcome to App studio`\n    }), _jsx(Controller, {\n      name: \"email\",\n      control: control,\n      defaultValue: \"\",\n      render: function render(_ref4) {\n        var _errors$email;\n        var field = _ref4.field;\n        return _jsx(Input, _objectSpread(_objectSpread({}, field), {}, {\n          style: styles.input,\n          inputWrapper: styles.inputWrapper,\n          placeholder: \"Email\",\n          onChangeText: field.onChange,\n          value: field.value,\n          error: (_errors$email = errors.email) == null ? void 0 : _errors$email.message,\n          testID: \"email-input\",\n          colors: colors\n        }));\n      }\n    }), _jsx(Controller, {\n      name: \"password\",\n      control: control,\n      defaultValue: \"\",\n      render: function render(_ref5) {\n        var _errors$password;\n        var field = _ref5.field;\n        return _jsx(Input, _objectSpread(_objectSpread({}, field), {}, {\n          style: styles.input,\n          inputWrapper: styles.inputWrapper,\n          placeholder: \"Password\",\n          secureTextEntry: true,\n          onChangeText: field.onChange,\n          value: field.value,\n          error: (_errors$password = errors.password) == null ? void 0 : _errors$password.message,\n          colors: colors\n        }));\n      }\n    }), _jsx(Button, {\n      label: \"Login\",\n      onPress: handleSubmit(onSubmit),\n      variant: \"primary\"\n    }), loginError && _jsx(Text, {\n      style: styles.errorText,\n      children: loginError\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: '50%',\n    color: defaultColors.Blue\n  },\n  input: {\n    width: '100%',\n    marginBottom: 10,\n    padding: 10,\n    borderWidth: 1,\n    borderRadius: 5\n  },\n  inputWrapper: {\n    width: '100%',\n    marginBottom: 10\n  },\n  button: {\n    marginTop: 10,\n    padding: 15,\n    borderRadius: 5,\n    width: '100%',\n    backgroundColor: defaultColors.Blue\n  },\n  buttonText: {\n    color: defaultColors.White,\n    textAlign: 'center',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  errorText: {\n    color: defaultColors.Red,\n    textAlign: 'left'\n  }\n});\nexport default LoginComponent;","map":{"version":3,"names":["React","useState","View","StyleSheet","Text","useForm","Controller","yupResolver","colors","defaultColors","useAuth","loginSchema","Button","Input","jsx","_jsx","jsxs","_jsxs","LoginComponent","_ref","loginSuccess","_ref$colors","title","_useAuth","login","_useState","_useState2","_slicedToArray","loginError","setLoginError","_useForm","resolver","control","handleSubmit","setError","errors","formState","onSubmit","_ref3","_asyncToGenerator","_ref2","email","password","response","error","console","log","_x","apply","arguments","style","styles","container","children","name","defaultValue","render","_ref4","_errors$email","field","_objectSpread","input","inputWrapper","placeholder","onChangeText","onChange","value","message","testID","_ref5","_errors$password","secureTextEntry","label","onPress","variant","errorText","create","flex","justifyContent","alignItems","padding","fontSize","fontWeight","marginBottom","color","Blue","width","borderWidth","borderRadius","button","marginTop","backgroundColor","buttonText","White","textAlign","Red"],"sources":["/Users/sharmalperera/projects/apps/ExpoTemplateAppWithComponent/node_modules/react-native-auth-component/src/components/login-component/index.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, StyleSheet, Text } from 'react-native';\nimport { useForm, Controller } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { colors as defaultColors } from '@/assets/Colors';\nimport { useAuth } from 'react-native-auth-component';\nimport { loginSchema } from './ValidationSchema';\nimport { Button,Input } from 'react-native-theme-component';\n\ntype LoginComponentProps = {\n  loginSuccess: () => void;\n  colors?: typeof defaultColors;\n  title: string;\n};\n\nconst LoginComponent: React.FC<LoginComponentProps> = ({ loginSuccess, colors = defaultColors, title }) => {\n  const { login } = useAuth();\n  const [loginError, setLoginError] = useState<string | null>(null);\n\n  const { control, handleSubmit, setError, formState: { errors } } = useForm({\n    resolver: yupResolver(loginSchema),\n  });\n\n  const onSubmit = async ({ email, password }: { email: string; password: string }) => {\n    try {\n      const response = await login(email, password);\n      if (response === true) {\n        loginSuccess();\n      } else {\n        setLoginError('Login failed. Please check your credentials.');\n      }\n    } catch (error) {\n      console.log('error', error);\n      setLoginError('An error occurred during login. Please try again.');\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>{title? title :`Welcome to App studio`}</Text>\n      <Controller\n        name=\"email\"\n        control={control}\n        defaultValue=\"\"\n        render={({ field }) => (\n          <Input\n            {...field}\n            style={styles.input}\n            inputWrapper={styles.inputWrapper}\n            placeholder=\"Email\"\n            onChangeText={field.onChange}\n            value={field.value}\n            error={errors.email?.message}\n            testID=\"email-input\"\n            colors={colors}\n          />\n        )}\n      />\n      <Controller\n        name=\"password\"\n        control={control}\n        defaultValue=\"\"\n        render={({ field }) => (\n          <Input\n            {...field}\n            style={styles.input}\n            inputWrapper={styles.inputWrapper}\n            placeholder=\"Password\"\n            secureTextEntry\n            onChangeText={field.onChange}\n            value={field.value}\n            error={errors.password?.message}\n            colors={colors}\n          />\n        )}\n      />\n      {/*<Button\n        title=\"Login\"\n        onPress={handleSubmit(onSubmit)}\n        style={styles.button}\n        textProps={styles.buttonText}\n        colors={colors}\n      />*/}\n\n      <Button\n        label=\"Login\"\n        onPress={handleSubmit(onSubmit)}\n        variant= 'primary'\n      />\n\n      {loginError && <Text style={styles.errorText}>{loginError}</Text>}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: '50%',\n    color: defaultColors.Blue,\n  },\n  input: {\n    width: '100%',\n    marginBottom: 10,\n    padding: 10,\n    borderWidth: 1,\n    borderRadius: 5,\n  },\n  inputWrapper: {\n    width: '100%',\n    marginBottom: 10,\n  },\n  button: {\n    marginTop: 10,\n    padding: 15,\n    borderRadius: 5,\n    width: '100%',\n    backgroundColor: defaultColors.Blue,\n  },\n  buttonText: {\n    color: defaultColors.White,\n    textAlign: 'center',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  errorText: {\n    color: defaultColors.Red,\n    textAlign: 'left',\n  },\n});\n\nexport default LoginComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}