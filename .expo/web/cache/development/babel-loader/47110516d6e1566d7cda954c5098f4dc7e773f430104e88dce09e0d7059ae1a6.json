{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { WalletService } from \"../services/WalletService\";\nimport { useAuth } from 'react-native-auth-component';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar WalletContext = createContext(undefined);\nvar walletService = WalletService.instance();\nexport var WalletProvider = function WalletProvider(_ref) {\n  var children = _ref.children;\n  var _useAuth = useAuth(),\n    user = _useAuth.user;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    walletDetails = _useState2[0],\n    setWalletDetails = _useState2[1];\n  var _useState3 = useState({\n      totalRecords: 0,\n      pageSize: 10,\n      pageNumber: 1\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    paging = _useState4[0],\n    setPaging = _useState4[1];\n  var fetchWalletDetails = function () {\n    var _ref2 = _asyncToGenerator(function* (page, pageSize, type) {\n      try {\n        var response = yield walletService.getWallets(page, pageSize, type);\n        if (response.data && response.data.length > 0) {\n          var walletData = response.data.map(function (wallet) {\n            return {\n              walletId: wallet.walletId,\n              balance: wallet.currentBalance,\n              accountNumber: wallet.bankAccount.accountNumber,\n              accountType: wallet.bankAccount.accountType,\n              walletName: wallet.walletName,\n              accountSubType: wallet.bankAccount.accountSubType,\n              currencyCode: wallet.currencyCode\n            };\n          });\n          setWalletDetails(walletData);\n          setPaging({\n            totalRecords: response.paging.totalRecords,\n            pageSize: pageSize,\n            pageNumber: page\n          });\n        }\n      } catch (error) {\n        console.error('Error fetching wallet details:', error);\n      }\n    });\n    return function fetchWalletDetails(_x, _x2, _x3) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    if (user) {\n      fetchWalletDetails(paging.pageNumber, paging.pageSize);\n    }\n  }, [paging.pageNumber, paging.pageSize]);\n  return _jsx(WalletContext.Provider, {\n    value: {\n      walletDetails: walletDetails,\n      paging: paging,\n      fetchWalletDetails: fetchWalletDetails\n    },\n    children: children\n  });\n};\nexport var useWallet = function useWallet() {\n  var context = useContext(WalletContext);\n  if (context === undefined) {\n    throw new Error('useWallet must be used within a WalletProvider');\n  }\n  return context;\n};","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","WalletService","useAuth","jsx","_jsx","WalletContext","undefined","walletService","instance","WalletProvider","_ref","children","_useAuth","user","_useState","_useState2","_slicedToArray","walletDetails","setWalletDetails","_useState3","totalRecords","pageSize","pageNumber","_useState4","paging","setPaging","fetchWalletDetails","_ref2","_asyncToGenerator","page","type","response","getWallets","data","length","walletData","map","wallet","walletId","balance","currentBalance","accountNumber","bankAccount","accountType","walletName","accountSubType","currencyCode","error","console","_x","_x2","_x3","apply","arguments","Provider","value","useWallet","context","Error"],"sources":["/Users/sharmalperera/projects/apps/ExpoTemplateAppWithComponent/node_modules/react-native-dashboard-component/src/context/WalletContext.tsx"],"sourcesContent":["// WalletContext.tsx\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { WalletService } from '../services/WalletService';\nimport { useAuth } from 'react-native-auth-component';\n\n// Define the wallet details interface\ninterface WalletDetails {\n  walletId: string;\n  balance: number;\n  accountNumber: string;\n  accountType: string;\n  walletName: string;\n}\n\n// Define the context value type for wallet-related functions\ninterface WalletContextType {\n  walletDetails: WalletDetails[] | null;\n  paging: {\n    totalRecords: number;\n    pageSize: number;\n    pageNumber: number;\n  };\n  fetchWalletDetails: (page: number, pageSize: number,type?: string) => Promise<boolean>;\n\n}\n\n// Create the wallet context\nconst WalletContext = createContext<WalletContextType | undefined>(undefined);\nconst walletService = WalletService.instance()\nexport const WalletProvider: React.FC = ({ children }) => {\n  const { user } = useAuth();\n  const [walletDetails, setWalletDetails] = useState<WalletDetails[] | null>(null);\n  const [paging, setPaging] = useState({\n    totalRecords: 0,\n    pageSize: 10,\n    pageNumber: 1,\n  });\n\n  const fetchWalletDetails = async (page: number, pageSize: number,type?: string) => {\n    try {\n      // Call the wallet service to get wallet details with pagination parameters\n      const response = await walletService.getWallets(page, pageSize,type);\n\n      // Check if the response contains data\n      if (response.data && response.data.length > 0) {\n        // Map the response data to an array of WalletDetails\n        const walletData: WalletDetails[] = response.data.map((wallet: any) => ({\n          walletId: wallet.walletId,\n          balance: wallet.currentBalance,\n          accountNumber: wallet.bankAccount.accountNumber,\n          accountType: wallet.bankAccount.accountType,\n          walletName: wallet.walletName,\n          accountSubType:wallet.bankAccount.accountSubType,\n          currencyCode:wallet.currencyCode\n        }));\n\n        // Set the walletDetails state\n        setWalletDetails(walletData);\n\n        // Update the paging state\n        setPaging({\n          totalRecords: response.paging.totalRecords,\n          pageSize,\n          pageNumber: page,\n        });\n      }\n    } catch (error) {\n      console.error('Error fetching wallet details:', error);\n    }\n  };\n\n  useEffect(() => {\n    // Fetch the initial page of wallet details\n    if (user) {\n      fetchWalletDetails(paging.pageNumber, paging.pageSize);\n    }\n\n  }, [paging.pageNumber, paging.pageSize]);\n\n  return (\n    <WalletContext.Provider value={{ walletDetails, paging, fetchWalletDetails }}>\n      {children}\n    </WalletContext.Provider>\n  );\n};\n\nexport const useWallet = () => {\n  const context = useContext(WalletContext);\n  if (context === undefined) {\n    throw new Error('useWallet must be used within a WalletProvider');\n  }\n  return context;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}