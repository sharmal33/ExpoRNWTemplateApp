{"ast":null,"code":"import React from 'react';\nimport AppNavigator from \"./src/navigation/AppNavigator\";\nimport LogBox from \"react-native-web/dist/exports/LogBox\";\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { navigationRef } from \"./src/navigation/NavigationService\";\nimport themeData from \"./src/assets/theme-data\";\nimport { ThemeProvider } from 'react-native-theme-component';\nLogBox.ignoreLogs(['Warning: ...']);\nLogBox.ignoreAllLogs();\nimport env from \"./src/env\";\nimport { MemberShipService, UserProvider } from 'react-native-user-profile-component';\nimport { WalletProvider, ProductInfoProvider, WalletService, ProductInfoService } from 'react-native-dashboard-component';\nimport { AuthComponent, AuthProvider, createAuthorizedApiClient } from 'react-native-auth-component';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nAuthComponent.instance().configure({\n  appId: env.api.appId,\n  envId: env.api.envId,\n  bankId: env.api.bankId,\n  codeVerifier: env.api.codeVerifier,\n  codeChallenge: env.api.codeChallenge,\n  redirectUrl: env.api.redirectUrl,\n  apiBaseUrl: env.api.apiBaseUrl,\n  authBaseUrl: env.api.authBaseUrl\n}).then(function () {\n  MemberShipService.instance().initClients({\n    memberShipClient: createAuthorizedApiClient(env.api.apiBaseUrl + env.api.membershipBaseUrl)\n  });\n  WalletService.instance().initClients({\n    walletClient: createAuthorizedApiClient(env.api.apiBaseUrl + env.api.walletBaseUrl)\n  });\n  ProductInfoService.instance().initClients({\n    productInfoClient: createAuthorizedApiClient(env.api.apiBaseUrl + env.api.bankingProductInfoBaseUrl)\n  });\n});\nvar App = function App() {\n  return _jsx(ThemeProvider, {\n    theme: themeData,\n    children: _jsx(AuthProvider, {\n      children: _jsx(UserProvider, {\n        children: _jsx(ProductInfoProvider, {\n          children: _jsx(WalletProvider, {\n            children: _jsx(SafeAreaProvider, {\n              children: _jsx(NavigationContainer, {\n                ref: navigationRef,\n                children: _jsx(AppNavigator, {})\n              })\n            })\n          })\n        })\n      })\n    })\n  });\n};\nexport default App;","map":{"version":3,"names":["React","AppNavigator","LogBox","SafeAreaProvider","NavigationContainer","navigationRef","themeData","ThemeProvider","ignoreLogs","ignoreAllLogs","env","MemberShipService","UserProvider","WalletProvider","ProductInfoProvider","WalletService","ProductInfoService","AuthComponent","AuthProvider","createAuthorizedApiClient","jsx","_jsx","instance","configure","appId","api","envId","bankId","codeVerifier","codeChallenge","redirectUrl","apiBaseUrl","authBaseUrl","then","initClients","memberShipClient","membershipBaseUrl","walletClient","walletBaseUrl","productInfoClient","bankingProductInfoBaseUrl","App","theme","children","ref"],"sources":["/Users/sharmalperera/projects/apps/ExpoTemplateAppWithComponent/App.tsx"],"sourcesContent":["import React, {useEffect} from 'react';\nimport AppNavigator from '@/navigation/AppNavigator';\nimport {LogBox} from 'react-native';\n\nimport {SafeAreaProvider} from 'react-native-safe-area-context';\n\nimport {NavigationContainer} from '@react-navigation/native';\nimport {navigationRef} from '@/navigation/NavigationService';\n\nimport themeData from '@/assets/theme-data';\nimport {ThemeProvider} from 'react-native-theme-component';\n\nimport SplashScreen from 'react-native-splash-screen';\nLogBox.ignoreLogs(['Warning: ...']); // Ignore log notification by message\nLogBox.ignoreAllLogs(); //Ignore all log notifications\nimport env from '@/env';\n\nimport {\n  MemberShipService,\n  UserProvider,\n} from 'react-native-user-profile-component';\nimport {\n  WalletProvider,\n  ProductInfoProvider,\n  WalletService,\n  ProductInfoService,\n} from 'react-native-dashboard-component';\n\nimport {\n  AuthComponent,\n  AuthProvider,\n  createAppTokenApiClient,\n  createAuthorizedApiClient,\n} from 'react-native-auth-component';\n\n// If you wanna avoid overwrite your codes, please add your code inside ignore overwrite block\n\n/* Start ignore overwrite imports block */\n\n/* End ignore overwrite imports block */\n// console.log('env ',env);\n\nAuthComponent.instance()\n  .configure({\n    appId: env.api.appId,\n    envId: env.api.envId,\n    bankId: env.api.bankId,\n    codeVerifier: env.api.codeVerifier,\n    codeChallenge: env.api.codeChallenge,\n    redirectUrl: env.api.redirectUrl,\n    apiBaseUrl: env.api.apiBaseUrl,\n    authBaseUrl: env.api.authBaseUrl,\n  })\n  .then(() => {\n    MemberShipService.instance().initClients({\n      memberShipClient: createAuthorizedApiClient(\n        env.api.apiBaseUrl + env.api.membershipBaseUrl,\n      ),\n    });\n    WalletService.instance().initClients({\n      walletClient: createAuthorizedApiClient(\n        env.api.apiBaseUrl + env.api.walletBaseUrl,\n      ),\n    });\n    ProductInfoService.instance().initClients({\n      productInfoClient: createAuthorizedApiClient(\n        env.api.apiBaseUrl + env.api.bankingProductInfoBaseUrl,\n      ),\n    });\n  });\n\nconst App = () => {\n  /* Start ignore overwrite code block */\n\n  /* End ignore overwrite code block */\n\n  // useEffect(() => {\n  //   setTimeout(() => SplashScreen.hide(), 2000);\n  // });\n\n  return (\n    <ThemeProvider theme={themeData}>\n      <AuthProvider>\n        <UserProvider>\n          <ProductInfoProvider>\n            <WalletProvider>\n              <SafeAreaProvider>\n                <NavigationContainer ref={navigationRef}>\n                  <AppNavigator />\n                </NavigationContainer>\n              </SafeAreaProvider>\n            </WalletProvider>\n          </ProductInfoProvider>\n        </UserProvider>\n      </AuthProvider>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAmB,OAAO;AACtC,OAAOC,YAAY;AAAkC,OAAAC,MAAA;AAGrD,SAAQC,gBAAgB,QAAO,gCAAgC;AAE/D,SAAQC,mBAAmB,QAAO,0BAA0B;AAC5D,SAAQC,aAAa;AAErB,OAAOC,SAAS;AAChB,SAAQC,aAAa,QAAO,8BAA8B;AAG1DL,MAAM,CAACM,UAAU,CAAC,CAAC,cAAc,CAAC,CAAC;AACnCN,MAAM,CAACO,aAAa,CAAC,CAAC;AACtB,OAAOC,GAAG;AAEV,SACEC,iBAAiB,EACjBC,YAAY,QACP,qCAAqC;AAC5C,SACEC,cAAc,EACdC,mBAAmB,EACnBC,aAAa,EACbC,kBAAkB,QACb,kCAAkC;AAEzC,SACEC,aAAa,EACbC,YAAY,EAEZC,yBAAyB,QACpB,6BAA6B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AASrCJ,aAAa,CAACK,QAAQ,CAAC,CAAC,CACrBC,SAAS,CAAC;EACTC,KAAK,EAAEd,GAAG,CAACe,GAAG,CAACD,KAAK;EACpBE,KAAK,EAAEhB,GAAG,CAACe,GAAG,CAACC,KAAK;EACpBC,MAAM,EAAEjB,GAAG,CAACe,GAAG,CAACE,MAAM;EACtBC,YAAY,EAAElB,GAAG,CAACe,GAAG,CAACG,YAAY;EAClCC,aAAa,EAAEnB,GAAG,CAACe,GAAG,CAACI,aAAa;EACpCC,WAAW,EAAEpB,GAAG,CAACe,GAAG,CAACK,WAAW;EAChCC,UAAU,EAAErB,GAAG,CAACe,GAAG,CAACM,UAAU;EAC9BC,WAAW,EAAEtB,GAAG,CAACe,GAAG,CAACO;AACvB,CAAC,CAAC,CACDC,IAAI,CAAC,YAAM;EACVtB,iBAAiB,CAACW,QAAQ,CAAC,CAAC,CAACY,WAAW,CAAC;IACvCC,gBAAgB,EAAEhB,yBAAyB,CACzCT,GAAG,CAACe,GAAG,CAACM,UAAU,GAAGrB,GAAG,CAACe,GAAG,CAACW,iBAC/B;EACF,CAAC,CAAC;EACFrB,aAAa,CAACO,QAAQ,CAAC,CAAC,CAACY,WAAW,CAAC;IACnCG,YAAY,EAAElB,yBAAyB,CACrCT,GAAG,CAACe,GAAG,CAACM,UAAU,GAAGrB,GAAG,CAACe,GAAG,CAACa,aAC/B;EACF,CAAC,CAAC;EACFtB,kBAAkB,CAACM,QAAQ,CAAC,CAAC,CAACY,WAAW,CAAC;IACxCK,iBAAiB,EAAEpB,yBAAyB,CAC1CT,GAAG,CAACe,GAAG,CAACM,UAAU,GAAGrB,GAAG,CAACe,GAAG,CAACe,yBAC/B;EACF,CAAC,CAAC;AACJ,CAAC,CAAC;AAEJ,IAAMC,GAAG,GAAG,SAANA,GAAGA,CAAA,EAAS;EAShB,OACEpB,IAAA,CAACd,aAAa;IAACmC,KAAK,EAAEpC,SAAU;IAAAqC,QAAA,EAC9BtB,IAAA,CAACH,YAAY;MAAAyB,QAAA,EACXtB,IAAA,CAACT,YAAY;QAAA+B,QAAA,EACXtB,IAAA,CAACP,mBAAmB;UAAA6B,QAAA,EAClBtB,IAAA,CAACR,cAAc;YAAA8B,QAAA,EACbtB,IAAA,CAAClB,gBAAgB;cAAAwC,QAAA,EACftB,IAAA,CAACjB,mBAAmB;gBAACwC,GAAG,EAAEvC,aAAc;gBAAAsC,QAAA,EACtCtB,IAAA,CAACpB,YAAY,IAAE;cAAC,CACG;YAAC,CACN;UAAC,CACL;QAAC,CACE;MAAC,CACV;IAAC,CACH;EAAC,CACF,CAAC;AAEpB,CAAC;AAED,eAAewC,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}