{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nvar _class;\nimport DeviceEventEmitter from \"react-native-web/dist/exports/DeviceEventEmitter\";\nimport { authApiClient } from \"./services/api-clients/AuthApiClient\";\nimport { authService } from \"./services/AuthService\";\nexport var AuthComponent = function () {\n  function AuthComponent() {\n    _classCallCheck(this, AuthComponent);\n    this._configs = void 0;\n    if (AuthComponent._instance) {\n      throw new Error('Error: Instantiation failed: Use AuthComponent.instance() instead of new.');\n    }\n    AuthComponent._instance = this;\n  }\n  _createClass(AuthComponent, [{\n    key: \"configure\",\n    value: function configure(configs) {\n      var _this = this;\n      return new Promise(function (resolve) {\n        _this._configs = configs;\n        authApiClient.configure(configs);\n        authService.configure(configs);\n        resolve();\n      });\n    }\n  }, {\n    key: \"getConfigs\",\n    value: function getConfigs() {\n      if (this._configs === undefined) {\n        throw new Error('Error: AuthComponent must be configured before using');\n      }\n      return this._configs;\n    }\n  }, {\n    key: \"addSessionListener\",\n    value: function addSessionListener(listener) {\n      DeviceEventEmitter.addListener('authcomponent.session.expired', listener);\n    }\n  }, {\n    key: \"removeSessionListener\",\n    value: function removeSessionListener(listener) {\n      DeviceEventEmitter.removeListener('authcomponent.session.expired', listener);\n    }\n  }], [{\n    key: \"instance\",\n    value: function instance() {\n      return AuthComponent._instance;\n    }\n  }]);\n  return AuthComponent;\n}();\n_class = AuthComponent;\nAuthComponent._instance = new _class();","map":{"version":3,"names":["authApiClient","authService","AuthComponent","_classCallCheck","_configs","_instance","Error","_createClass","key","value","configure","configs","_this","Promise","resolve","getConfigs","undefined","addSessionListener","listener","DeviceEventEmitter","addListener","removeSessionListener","removeListener","instance","_class"],"sources":["/Users/sharmalperera/projects/apps/ExpoTemplateAppWithComponent/node_modules/react-native-auth-component/src/index.ts"],"sourcesContent":["import { DeviceEventEmitter } from 'react-native';\nimport { authApiClient } from './services/api-clients/AuthApiClient';\nimport { authService } from './services/AuthService';\nimport { AuthComponentConfig } from './types';\n\nexport class AuthComponent {\n  private static _instance: AuthComponent = new AuthComponent();\n\n  private _configs?: AuthComponentConfig;\n\n  constructor() {\n    if (AuthComponent._instance) {\n      throw new Error('Error: Instantiation failed: Use AuthComponent.instance() instead of new.');\n    }\n    AuthComponent._instance = this;\n  }\n\n  public static instance(): AuthComponent {\n    return AuthComponent._instance;\n  }\n\n  public configure(configs: AuthComponentConfig) {\n    return new Promise<void>((resolve) => {\n      this._configs = configs;\n      // Configure the authApiClient and authService with the provided configs\n      authApiClient.configure(configs);\n      authService.configure(configs);\n      resolve();\n    });\n  }\n\n  public getConfigs() {\n    if (this._configs === undefined) {\n      throw new Error('Error: AuthComponent must be configured before using');\n    }\n    return this._configs;\n  }\n\n  public addSessionListener(listener: (data: any) => void) {\n    DeviceEventEmitter.addListener('authcomponent.session.expired', listener);\n  }\n\n  public removeSessionListener(listener: (...args: any[]) => any) {\n    DeviceEventEmitter.removeListener('authcomponent.session.expired', listener);\n  }\n}\n"],"mappings":";;;;AACA,SAASA,aAAa;AACtB,SAASC,WAAW;AAGpB,WAAaC,aAAa;EAKxB,SAAAA,cAAA,EAAc;IAAAC,eAAA,OAAAD,aAAA;IAAA,KAFNE,QAAQ;IAGd,IAAIF,aAAa,CAACG,SAAS,EAAE;MAC3B,MAAM,IAAIC,KAAK,CAAC,2EAA2E,CAAC;IAC9F;IACAJ,aAAa,CAACG,SAAS,GAAG,IAAI;EAChC;EAACE,YAAA,CAAAL,aAAA;IAAAM,GAAA;IAAAC,KAAA,EAMD,SAAAC,UAAiBC,OAA4B,EAAE;MAAA,IAAAC,KAAA;MAC7C,OAAO,IAAIC,OAAO,CAAO,UAACC,OAAO,EAAK;QACpCF,KAAI,CAACR,QAAQ,GAAGO,OAAO;QAEvBX,aAAa,CAACU,SAAS,CAACC,OAAO,CAAC;QAChCV,WAAW,CAACS,SAAS,CAACC,OAAO,CAAC;QAC9BG,OAAO,CAAC,CAAC;MACX,CAAC,CAAC;IACJ;EAAC;IAAAN,GAAA;IAAAC,KAAA,EAED,SAAAM,WAAA,EAAoB;MAClB,IAAI,IAAI,CAACX,QAAQ,KAAKY,SAAS,EAAE;QAC/B,MAAM,IAAIV,KAAK,CAAC,sDAAsD,CAAC;MACzE;MACA,OAAO,IAAI,CAACF,QAAQ;IACtB;EAAC;IAAAI,GAAA;IAAAC,KAAA,EAED,SAAAQ,mBAA0BC,QAA6B,EAAE;MACvDC,kBAAkB,CAACC,WAAW,CAAC,+BAA+B,EAAEF,QAAQ,CAAC;IAC3E;EAAC;IAAAV,GAAA;IAAAC,KAAA,EAED,SAAAY,sBAA6BH,QAAiC,EAAE;MAC9DC,kBAAkB,CAACG,cAAc,CAAC,+BAA+B,EAAEJ,QAAQ,CAAC;IAC9E;EAAC;IAAAV,GAAA;IAAAC,KAAA,EA3BD,SAAAc,SAAA,EAAwC;MACtC,OAAOrB,aAAa,CAACG,SAAS;IAChC;EAAC;EAAA,OAAAH,aAAA;AAAA;AA0BFsB,MAAA,GAxCYtB,aAAa;AAAbA,aAAa,CACTG,SAAS,GAAkB,IAAIH,MAAa,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}