{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { ProductInfoService } from \"../services/ProductInfoService\";\nimport { useAuth } from 'react-native-auth-component';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar ProductInfoContext = createContext(undefined);\nvar productInfoService = ProductInfoService.instance();\nexport var ProductInfoProvider = function ProductInfoProvider(_ref) {\n  var children = _ref.children;\n  var _useAuth = useAuth(),\n    user = _useAuth.user;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    productInfo = _useState2[0],\n    setProductInfo = _useState2[1];\n  useEffect(function () {\n    if (user != null && user.access_token) {}\n  }, [user]);\n  var fetchProductInfo = function () {\n    var _ref2 = _asyncToGenerator(function* (countryCode, productCategory) {\n      try {\n        var fetchedProductInfo = yield productInfoService.getProductInfo(countryCode, productCategory);\n        setProductInfo(fetchedProductInfo);\n        return true;\n      } catch (error) {\n        console.error('Error fetching product info:', error);\n        return false;\n      }\n    });\n    return function fetchProductInfo(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsx(ProductInfoContext.Provider, {\n    value: {\n      productInfo: productInfo,\n      fetchProductInfo: fetchProductInfo\n    },\n    children: children\n  });\n};\nexport var useProductInfo = function useProductInfo() {\n  var context = useContext(ProductInfoContext);\n  if (context === undefined) {\n    throw new Error('useProductInfo must be used within a ProductInfoProvider');\n  }\n  return context;\n};","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","ProductInfoService","useAuth","jsx","_jsx","ProductInfoContext","undefined","productInfoService","instance","ProductInfoProvider","_ref","children","_useAuth","user","_useState","_useState2","_slicedToArray","productInfo","setProductInfo","access_token","fetchProductInfo","_ref2","_asyncToGenerator","countryCode","productCategory","fetchedProductInfo","getProductInfo","error","console","_x","_x2","apply","arguments","Provider","value","useProductInfo","context","Error"],"sources":["/Users/sharmalperera/projects/apps/ExpoTemplateAppWithComponent/node_modules/react-native-dashboard-component/src/context/ProductInfoContext.tsx"],"sourcesContent":["//ProductInfoContext\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { ProductInfoService } from '../services/ProductInfoService'; // Import your ProductInfoService\nimport { useAuth } from 'react-native-auth-component';\n\n// Define the product info interface\ninterface ProductInfo {\n  // Define the structure of product info as needed\n}\n\n// Define the context value type for product info-related functions\ninterface ProductInfoContextType {\n  productInfo: ProductInfo | null;\n  fetchProductInfo: (countryCode: string, productCategory: string) => Promise<boolean>;\n}\n\n// Create the product info context\nconst ProductInfoContext = createContext<ProductInfoContextType | undefined>(undefined);\nconst productInfoService = ProductInfoService.instance(); // Initialize your ProductInfoService\n\nexport const ProductInfoProvider: React.FC = ({ children }) => {\n  const { user } = useAuth();\n  const [productInfo, setProductInfo] = useState<ProductInfo | null>(null);\n\n  useEffect(() => {\n    if (user?.access_token) {\n      // Optionally, fetch product info here if needed when the user changes\n    }\n  }, [user]);\n\n  const fetchProductInfo = async (countryCode: string, productCategory: string) => {\n    try {\n      const fetchedProductInfo = await productInfoService.getProductInfo(countryCode, productCategory);\n      setProductInfo(fetchedProductInfo);\n      return true;\n    } catch (error) {\n      console.error('Error fetching product info:', error);\n      return false;\n    }\n  };\n\n  return (\n    <ProductInfoContext.Provider value={{ productInfo, fetchProductInfo }}>\n      {children}\n    </ProductInfoContext.Provider>\n  );\n};\n\nexport const useProductInfo = () => {\n  const context = useContext(ProductInfoContext);\n  if (context === undefined) {\n    throw new Error('useProductInfo must be used within a ProductInfoProvider');\n  }\n  return context;\n};\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC7E,SAASC,kBAAkB;AAC3B,SAASC,OAAO,QAAQ,6BAA6B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AActD,IAAMC,kBAAkB,GAAGR,aAAa,CAAqCS,SAAS,CAAC;AACvF,IAAMC,kBAAkB,GAAGN,kBAAkB,CAACO,QAAQ,CAAC,CAAC;AAExD,OAAO,IAAMC,mBAA6B,GAAG,SAAhCA,mBAA6BA,CAAAC,IAAA,EAAqB;EAAA,IAAfC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EACtD,IAAAC,QAAA,GAAiBV,OAAO,CAAC,CAAC;IAAlBW,IAAI,GAAAD,QAAA,CAAJC,IAAI;EACZ,IAAAC,SAAA,GAAsCd,QAAQ,CAAqB,IAAI,CAAC;IAAAe,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAjEG,WAAW,GAAAF,UAAA;IAAEG,cAAc,GAAAH,UAAA;EAElChB,SAAS,CAAC,YAAM;IACd,IAAIc,IAAI,YAAJA,IAAI,CAAEM,YAAY,EAAE,CAExB;EACF,CAAC,EAAE,CAACN,IAAI,CAAC,CAAC;EAEV,IAAMO,gBAAgB;IAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,WAAOC,WAAmB,EAAEC,eAAuB,EAAK;MAC/E,IAAI;QACF,IAAMC,kBAAkB,SAASlB,kBAAkB,CAACmB,cAAc,CAACH,WAAW,EAAEC,eAAe,CAAC;QAChGN,cAAc,CAACO,kBAAkB,CAAC;QAClC,OAAO,IAAI;MACb,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACpD,OAAO,KAAK;MACd;IACF,CAAC;IAAA,gBATKP,gBAAgBA,CAAAS,EAAA,EAAAC,GAAA;MAAA,OAAAT,KAAA,CAAAU,KAAA,OAAAC,SAAA;IAAA;EAAA,GASrB;EAED,OACE5B,IAAA,CAACC,kBAAkB,CAAC4B,QAAQ;IAACC,KAAK,EAAE;MAAEjB,WAAW,EAAXA,WAAW;MAAEG,gBAAgB,EAAhBA;IAAiB,CAAE;IAAAT,QAAA,EACnEA;EAAQ,CACkB,CAAC;AAElC,CAAC;AAED,OAAO,IAAMwB,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;EAClC,IAAMC,OAAO,GAAGtC,UAAU,CAACO,kBAAkB,CAAC;EAC9C,IAAI+B,OAAO,KAAK9B,SAAS,EAAE;IACzB,MAAM,IAAI+B,KAAK,CAAC,0DAA0D,CAAC;EAC7E;EACA,OAAOD,OAAO;AAChB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}